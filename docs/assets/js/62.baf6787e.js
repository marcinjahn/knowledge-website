(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{548:function(t,e,s){"use strict";s.r(e);var a=s(22),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"services-and-dependency-injection"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#services-and-dependency-injection"}},[t._v("#")]),t._v(" Services and Dependency Injection")]),t._v(" "),s("p",[t._v("Angular has a bit of similarity to the .NET ecosystem in regards to handling\nservices. The classes that provide some specific functionalities (like logging)\ncan be brought into other classes (e.g. components) using Dependency Injection.\nHere's a simple example:")]),t._v(" "),s("p",[t._v("This is some service:")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LoggerService")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Here's a class that wants to use the service:")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token decorator"}},[s("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Component")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    providers"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("LoggerService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyComponent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" logger"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" LoggerService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("someMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("logger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Something happened'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("The highlighted lines show, in order:")]),t._v(" "),s("ol",[s("li",[t._v("How to create a "),s("em",[t._v("scope")]),t._v(" for "),s("code",[t._v("LoggerService")])]),t._v(" "),s("li",[t._v("Constructor injection")]),t._v(" "),s("li",[t._v("Using the injected service.")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("File Naming")]),t._v(" "),s("p",[t._v("Just like other kinds of entities in Angular, files containing services\nare usually named following the template of "),s("code",[t._v("<name>.service.ts")]),t._v(".")])]),t._v(" "),s("p",[t._v("Services in Angular are just typical TypeScript classes. They do not use any\nAngular-specific decorator (unless you want to "),s("a",{attrs:{href:"#injecting-into-services"}},[t._v("inject into some other\nservice")]),t._v(").")]),t._v(" "),s("h2",{attrs:{id:"scope"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scope"}},[t._v("#")]),t._v(" Scope")]),t._v(" "),s("p",[t._v("The way how we injected the service into the component in the example above has\nsome consequences:")]),t._v(" "),s("ul",[s("li",[t._v("the child components (direct and indirect) will receive the same instance of\nthe "),s("code",[t._v("LoggerService")]),t._v(" (if they ask for it)")]),t._v(" "),s("li",[t._v("all the other comonents (other than the children of "),s("code",[t._v("MyComponent")]),t._v(") would\nreceive different instance(s) of "),s("code",[t._v("LoggerService")])])]),t._v(" "),s("p",[t._v("The Angular injector is "),s("em",[t._v("hierarchical")]),t._v(". We can inject services into:")]),t._v(" "),s("ul",[s("li",[t._v("components - "),s("code",[t._v("providers")]),t._v(" of a module or component")]),t._v(" "),s("li",[t._v("services - "),s("code",[t._v("providers")]),t._v(" of a module and "),s("code",[t._v("@Injectable")])]),t._v(" "),s("li",[t._v("directives")]),t._v(" "),s("li",[t._v("pipes")])]),t._v(" "),s("h3",{attrs:{id:"singleton"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#singleton"}},[t._v("#")]),t._v(" Singleton")]),t._v(" "),s("p",[t._v("Providing a sevice via "),s("code",[t._v("SomeComponent")]),t._v(" makes it a singleton among the children\ntree of that component.")]),t._v(" "),s("p",[t._v("Providing a service via the "),s("code",[t._v("AppComponent")]),t._v(" makes it a singleton among all\ncomponents (since "),s("code",[t._v("AppComponent")]),t._v(" is usually the root of any Angular app).")]),t._v(" "),s("p",[t._v("Providing a service in ANY "),s("RouterLink",{attrs:{to:"/programming/angular/modules.html#lazy-loading"}},[t._v("eager-loaded module")]),t._v("\n(e.g., "),s("code",[t._v("AppModule")]),t._v("), makes it a "),s("strong",[t._v("global singleton")]),t._v(" (for both all the components\nand services). T")],1),t._v(" "),s("p",[t._v("Providing a service in a "),s("RouterLink",{attrs:{to:"/programming/angular/modules.html#lazy-loading"}},[t._v("lazy-loaded module")]),t._v(", makes\nthat service available in entities declared within that module only. If some\nservice is provided both globally and in lazy-loaded module, the lazy-loaded\nmodule (and its entities) will get its own instance of that service.")],1),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("We can also decide that some service should be a singleton on this service's\nlevel via the "),s("code",[t._v("@Injectable({provideIn: 'root'})")]),t._v(" decorator. Then, we don't have\nto put it in any "),s("code",[t._v("providers")]),t._v(" array.")]),t._v(" "),s("p",[t._v("This method cannot be used with "),s("RouterLink",{attrs:{to:"/programming/angular/http.html#interceptors"}},[t._v("interceptors")]),t._v(".\nThey have to be provided in a module.")],1)]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("The way how Angular sets up DI is different from the .NET's way of doing that.\nIn .NET we decide whether the service should be a singleton or not at the\naplication root level. In Angular, each class/component may decide whether it\nwants to reuse some service instance or to get a new one.")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("Overriding")]),t._v(" "),s("p",[t._v("An instance of the service being injected (according to the rules above) may be\noverridden by a different instance of that service if we decide to "),s("code",[t._v("provide")]),t._v(" it\nagain.")]),t._v(" "),s("p",[t._v("The class that requires some service, but does not "),s("code",[t._v("provide")]),t._v(" it, will receive\nthe instance that was provided up in the tree (assuming that it was provided\nthere).")])]),t._v(" "),s("h2",{attrs:{id:"injecting-into-services"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#injecting-into-services"}},[t._v("#")]),t._v(" Injecting into Services")]),t._v(" "),s("p",[t._v("Services may be injected into other services. Services do not use decorators by\ndefault, so there is no "),s("code",[t._v("providers")]),t._v(" array. Instead, services that want to have\nsome dependency injected, need to use the special "),s("code",[t._v("@Injectable")]),t._v(" decorator.")]),t._v(" "),s("p",[t._v("Here's an example:")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("div",{staticClass:"highlight-lines"},[s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token decorator"}},[s("span",{pre:!0,attrs:{class:"token at operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Injectable")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataService")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" logger"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Logger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    doSomething"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Something"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("logger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Doing something"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Angular will try to match all the arguments that are required by the\nconstructor with DI. In this case, "),s("code",[t._v("Logger")]),t._v(" would be injected.")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("In order for a service to be injectable, it has to be "),s("code",[t._v("provided")]),t._v(" in some module\nor the decorator should be used like this: "),s("code",[t._v("@Injectable(provideIn: 'root')")]),t._v("\n(there are other "),s("code",[t._v("provideIn")]),t._v(" options as well).")])]),t._v(" "),s("h2",{attrs:{id:"provide-strategies"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#provide-strategies"}},[t._v("#")]),t._v(" Provide Strategies")]),t._v(" "),s("p",[t._v("Until now, in the module's "),s("code",[t._v("providers")]),t._v(" array, we'd just list names of the\nservices. By default, the class's name acts as a token that represents that\nclass. Angular's injector is more flexible and we can define a token and\ndependency to be different things. It's a bit similar to how in .NET there's an\ninterface that classes depend on and a class that actually implements that\ninterface and gets injected.")]),t._v(" "),s("p",[t._v("Providers can be also defined like this:")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\nproviders"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create MyClass and inject in place of SomeToken")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" provide"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" SomeToken"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" useClass"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" MyClass "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Inject whatever AnotherToken resolves to in place of SomeToken")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" provide"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" SomeToken"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" useExisting"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" AnotherToken "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Returns a static value in place of SomeToken")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" provide"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" SomeToken"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" useValue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Define a function that returns something in place of SomeToken")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n        provide"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" SomeToken"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("useFactory")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" something"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        deps"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// tokens to be used by the factory if it has some parameters to be injected")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),s("p",[t._v("The factory injection function can be defined in a separate file, often called\n"),s("code",[t._v("<service>.service.provider.ts")]),t._v(".")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Default")]),t._v(" "),s("p",[t._v("The default "),s("code",[t._v("providers: [SomeService]")]),t._v(" shorthand can be treated as:")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[t._v("providers"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" provide"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" SomeService"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" useClass"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" SomeService "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])])]),t._v(" "),s("h3",{attrs:{id:"tokens"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tokens"}},[t._v("#")]),t._v(" Tokens")]),t._v(" "),s("p",[t._v("The injection tokens are recommended to be created like this:")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" InjectionToken "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@angular/core'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("APP_CONFIG")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InjectionToken"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("AppConfig"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'app.config'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// and provide...")]),t._v("\n\nproviders"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" provide"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("APP_CONFIG")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" useValue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("Interfaces")]),t._v(" "),s("p",[t._v("Even though TypeScript has interfaces, and it would seem that they could be the\nperfect injection tokens, we can't use them, because interfaces disappear during\nthe transpilation process.")])])])}),[],!1,null,null,null);e.default=n.exports}}]);