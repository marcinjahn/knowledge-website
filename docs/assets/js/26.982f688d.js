(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{474:function(t,e,a){t.exports=a.p+"assets/img/umbrella-chart.2057ec25.png"},598:function(t,e,a){"use strict";a.r(e);var s=a(22),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"helm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#helm"}},[t._v("#")]),t._v(" Helm")]),t._v(" "),s("p",[s("strong",[t._v("Helm")]),t._v(" is a package manager for Kubernetes. The packages themselves are called\n"),s("strong",[t._v("Charts")]),t._v(". Installed chart is called a "),s("strong",[t._v("Release")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"why"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#why"}},[t._v("#")]),t._v(" Why?")]),t._v(" "),s("ul",[s("li",[t._v("Typically, K8s applications require multiple objects: deployments, services,\ningresses, storage, configs, etc. Usually, these are defined in separate YAML\nfiles.\n"),s("ul",[s("li",[t._v('we\'d like to treat these objects "atomically" - they are all parts of one app')]),t._v(" "),s("li",[t._v("the order of objects creation might matter (e.g. config before deployment)")]),t._v(" "),s("li",[t._v("versioning is not straightforward - we have to remember the differences\nbetween two versions and manually apply them")])])])]),t._v(" "),s("p",[t._v("With Helm, we get the following:")]),t._v(" "),s("ul",[s("li",[t._v('We treat the app as a single entity, "forgetting" that it consists of multiple\nobjects - an app in a '),s("strong",[t._v("package")])]),t._v(" "),s("li",[t._v("Packages are versioned, making it much easier to upgrade/downgrade apps")]),t._v(" "),s("li",[t._v("Templates allow extracting variables from YAML files for customizability")]),t._v(" "),s("li",[t._v("Management of dependencies")])]),t._v(" "),s("h2",{attrs:{id:"helm-charts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#helm-charts"}},[t._v("#")]),t._v(" Helm Charts")]),t._v(" "),s("p",[t._v("A "),s("strong",[t._v("Chart")]),t._v(" is a package.")]),t._v(" "),s("h3",{attrs:{id:"structure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#structure"}},[t._v("#")]),t._v(" Structure")]),t._v(" "),s("p",[t._v("A chart is an archive containing a single folder:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("my-chart\n|  charts (optional)\n|  |  mongodb-7.8.4.tgz\n|  Chart.yaml\n|  README.md\n|  requirements.yaml (optional)\n|  templates\n|  |  deployment.yaml\n|  |  _helpers.tpl\n|  |  ingress.yaml\n|  |  service.yaml\n|  |  NOTES.txt\n|  .helmignore\n|  values.yaml\n|  values.schema.json\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("Files in "),s("code",[t._v("/templates")]),t._v(" prefixed with "),s("code",[t._v("_")]),t._v("  are not rendered as manifests.")])]),t._v(" "),s("ul",[s("li",[t._v("the name of the folder is the name of the chart.")]),t._v(" "),s("li",[t._v("the "),s("code",[t._v("Chart.yaml")]),t._v(" contains metadata about the chart (like a version, dependencies, etc.)")]),t._v(" "),s("li",[t._v("dependencies can be also included as sub-charts, inside of the "),s("code",[t._v("charts")]),t._v("\nfolder, or listed in the "),s("code",[t._v("requirements.yaml")]),t._v(" (see note below)")]),t._v(" "),s("li",[t._v("the "),s("code",[t._v("templates")]),t._v(' folder contains customizable YAML files (or just "normal"\nK8s-ready YAMLs if customization is not needed).')]),t._v(" "),s("li",[t._v("the documentation should be placed in the "),s("code",[t._v("README.md")]),t._v(" file")]),t._v(" "),s("li",[t._v("the message to be displayed after chart installation should be placed in the\n"),s("code",[t._v("templates/NOTES.txt")]),t._v(" file. It is a template, so it can make use of\nplaceholders to dynamically include some values.")]),t._v(" "),s("li",[t._v("the template values can be specified in the "),s("code",[t._v("values.yaml")]),t._v(" file. It contains\nthe default values.")]),t._v(" "),s("li",[t._v("the "),s("code",[t._v("values.schema.json")]),t._v(" file defines the structure of the "),s("code",[t._v("values.yaml")]),t._v(" file\nas JSON schema")]),t._v(" "),s("li",[t._v("the "),s("code",[t._v(".helmignore")]),t._v(" file allows us to specify files that should be ignored by\nHelm during templates processing")]),t._v(" "),s("li",[t._v("the "),s("code",[t._v("_helpers.tpl")]),t._v(" file is often used to store user-defined functions/snippets")])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("requirements.yaml")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("requirements.yaml")]),t._v(" file is supported, but it's not a recommended way of\nadding dependencies. They should be listed in the "),s("code",[t._v("Chart.yaml")]),t._v(" file nowadays.")])]),t._v(" "),s("p",[t._v("An example of "),s("code",[t._v("Chart.yaml")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v2\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("chart\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" A Helm chart for Kubernetes\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("keywords")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" demo\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" application\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0.1.0 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# SemVer 2.0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("appVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1.16.0\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dependencies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n")])])]),s("h4",{attrs:{id:"umbrella-chart"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#umbrella-chart"}},[t._v("#")]),t._v(" Umbrella Chart")]),t._v(" "),s("p",[t._v("Some charts might be more complex, and they might contain a few major\ncomponents, like a frontend, a backend, and a database. Each of these is a\nseparate part of the application, with its own set of YAMLs. We can define them\nas separate charts, and then place them inside of the "),s("code",[t._v("charts")]),t._v(' directory of the\n"umbrella" chart - a chart that brings the sub-components together.')]),t._v(" "),s("p",[s("img",{attrs:{src:a(474),alt:""}})]),t._v(" "),s("p",[t._v("Each sub-chart may contain its own "),s("code",[t._v("values.yaml")]),t._v(" file. The umbrella chart's\n"),s("code",[t._v("value.yaml")]),t._v(" may overwrite the sub-chart's values.")]),t._v(" "),s("p",[t._v("The values defined in the sub-charts can also be made available to the parent\nchild. The sub-chart has to "),s("code",[t._v("export")]),t._v(" values, and the parent's "),s("code",[t._v("values.yaml")]),t._v(" has\nto "),s("code",[t._v("import-values")]),t._v(". There is also a way that does not require the sub-chart to\ndefine values inside of "),s("code",[t._v("export")]),t._v(". This functionality, in general, is rarely\nused, so I'm not describing it here.")]),t._v(" "),s("h3",{attrs:{id:"types"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#types"}},[t._v("#")]),t._v(" Types")]),t._v(" "),s("p",[t._v("Not all charts are apps. Some charts act as libraries of functions for other\ncharts to consume. We can denote it by specifying "),s("code",[t._v("type: library")]),t._v(" in the\n"),s("code",[t._v("Chart.yaml")]),t._v(" file. Applications use "),s("code",[t._v("type: application")]),t._v(" instead.")]),t._v(" "),s("h3",{attrs:{id:"versioning"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#versioning"}},[t._v("#")]),t._v(" Versioning")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("Chart.yaml")]),t._v(" file specifies multiple version strings:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("apiVersion")]),t._v(" - v2 is for Helm 3 (obviously)")]),t._v(" "),s("li",[s("code",[t._v("appVersion")]),t._v(" - version of the app to be installed")]),t._v(" "),s("li",[s("code",[t._v("version")]),t._v(" - version of the chart itself")])]),t._v(" "),s("p",[t._v('An example: We could be preparing a chart for Discourse. The version of\nDiscourse to be deployed could be "2.8.0.beta1". That would be the '),s("code",[t._v("appVersion")]),t._v(".\nChart version could be "),s("code",[t._v("0.0.1")]),t._v(" - "),s("code",[t._v("version")]),t._v(". If I change something in the charts\n(e.g. enhance the deployment properties somehow), I'd increment the "),s("code",[t._v("version")]),t._v("\nproperty. The "),s("code",[t._v("appVersion")]),t._v(" would not change (unlesss a new version of Discourse\ncame up and I wanted to include it in my chart as well).")]),t._v(" "),s("p",[t._v("Can I change "),s("code",[t._v("appVersion")]),t._v(" without changing the "),s("code",[t._v("version")]),t._v("? I think that I\nshouldn't be able to do so.")]),t._v(" "),s("p",[t._v("Can I upgrade a release to a chart with major version change? A major change\nmeans breaking changes, so I am not able to upgrade?")]),t._v(" "),s("h3",{attrs:{id:"releases"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#releases"}},[t._v("#")]),t._v(" Releases")]),t._v(" "),s("p",[t._v("A "),s("strong",[t._v("Release")]),t._v(' is an installed chart on some cluster. Usually, we install a chart\nonce, creating a single release. However, we could also install a chart multiple\ntimes creating multiple instances in a single cluster (e.g. "dev" and "test"\nenvironments or multiple instaces of some app, like a DB, for completely\ndifferent purposes).')]),t._v(" "),s("h4",{attrs:{id:"release-revision"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#release-revision"}},[t._v("#")]),t._v(" Release Revision")]),t._v(" "),s("p",[t._v("We can update a deployed release. It can be due to:")]),t._v(" "),s("ul",[s("li",[t._v("desire to upgrade to a different version of the chart")]),t._v(" "),s("li",[t._v("change in some values of the release")])]),t._v(" "),s("p",[t._v("We can upgrade existing release to a new revision with "),s("code",[t._v("helm upgradae {release} {chart}")]),t._v(". We can also go back in history with "),s("code",[t._v("helm rollback {release} {revision}")]),t._v(". We can print the history of revisions with "),s("code",[t._v("helm history {release}")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"templating"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#templating"}},[t._v("#")]),t._v(" Templating")]),t._v(" "),s("p",[t._v("Helm allows us to prepare YAML files with placeholders for values - these are\ntemplates. Thanks to that, releases can be customized. Some values specified by\nthe chart author can be replaced, while others could use the default values.")]),t._v(" "),s("p",[t._v("The placeholders in templates are wrapped in "),s("code",[t._v("{{}}")]),t._v(".")]),t._v(" "),s("p",[t._v("The placeholders in the templates are replaced with values when running Helm CLI\ncommands (like "),s("code",[t._v("install")]),t._v(" or "),s("code",[t._v("upgrade")]),t._v(").")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("Helm's template engine is based on the Go Template engine.")])]),t._v(" "),s("h3",{attrs:{id:"example"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[t._v("#")]),t._v(" Example")]),t._v(" "),s("p",[t._v("Template (for a service):")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Service\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" .Release.Name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" .Chart.Name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app.kubernetes.io/name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" .Chart.Name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" .Values.service.type "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" .Values.service.port "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("targetPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("protocol")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TCP\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("selector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app.kubernetes.io/name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" .Chart.Name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("values.yaml")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("service")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ClusterIP\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n")])])]),s("h3",{attrs:{id:"sources-of-data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sources-of-data"}},[t._v("#")]),t._v(" Sources of Data")]),t._v(" "),s("p",[t._v("Values for the templates can be supplied from various sources:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v(".Values")]),t._v(":\n"),s("ul",[s("li",[s("code",[t._v("values.yaml")]),t._v(" - chart's author places default values there")]),t._v(" "),s("li",[t._v("command line parameters (e.g. "),s("code",[t._v("helm install --set foo=bar")]),t._v(") - overwrites data\nfrom "),s("code",[t._v("values.yaml")])]),t._v(" "),s("li",[t._v("any other YAML file (then we need to specify it in the "),s("code",[t._v("helm install -f some-file.yaml")]),t._v(" command) - overrided values in "),s("code",[t._v("values.yaml")])])])]),t._v(" "),s("li",[s("code",[t._v("Chart.yaml")]),t._v(" - placeholder starts from "),s("code",[t._v(".Chart.")])]),t._v(" "),s("li",[t._v("other files - placeholder start from "),s("code",[t._v(".Files.Get {file-name}")])]),t._v(" "),s("li",[t._v("Template file itself - placeholder starts from "),s("code",[t._v(".Template.")]),t._v(".")]),t._v(" "),s("li",[t._v("Release runtime data - template starts from "),s("code",[t._v(".Release.")]),t._v(" (e.g. "),s("code",[t._v("Release.Name")]),t._v(",\n"),s("code",[t._v("Release.Revision")]),t._v(").")]),t._v(" "),s("li",[t._v("Cluster metadata - template starts from "),s("code",[t._v(".Capabilities")]),t._v(" (e.g.\n"),s("code",[t._v("Capabilities.KubeVersion")]),t._v(")")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("PascalCase")]),t._v(" "),s("p",[t._v("Even though the properties in the files could be in camelCase, in the templates\nwe have to refer to them in the PascalCase.")])]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("values.yaml")]),t._v(" can be as convoluted as needed (it can contain objects, arrays).\nIn the templates we can refer to these values. Examples:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v(".Values.service.name")])]),t._v(" "),s("li",[s("code",[t._v(".Values.service.names[0].displayName")])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Globals")]),t._v(" "),s("p",[t._v("If we define some data within the "),s("code",[t._v("global")]),t._v(" key of "),s("code",[t._v("values.yaml")]),t._v(", the data will\nbe available in any sub-chart under "),s("code",[t._v(".Values.global")]),t._v(".")])]),t._v(" "),s("h4",{attrs:{id:"schema"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#schema"}},[t._v("#")]),t._v(" Schema")]),t._v(" "),s("p",[t._v("If we define the schema in the "),s("code",[t._v("values.schema.json")]),t._v(" file, Helm will validate the\n"),s("code",[t._v("values.yaml")]),t._v(" file before doing any actual operation (like "),s("code",[t._v("install")]),t._v(").")]),t._v(" "),s("h3",{attrs:{id:"with-scope"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#with-scope"}},[t._v("#")]),t._v(" With scope")]),t._v(" "),s("p",[t._v("In our template, we could have lots of repetitions in our placeholders (e.g. all\nof them starting with "),s("code",[t._v(".Values.config")]),t._v("). In such a case, we could use "),s("code",[t._v("with")]),t._v(" to\nspecify that prefix just once:")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" with .Values.config "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" .type "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# .Values.config.type")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" .port "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# .Values.config.port")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tagetPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" end "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("New Lines")]),t._v(" "),s("p",[t._v('The "with" and '),s("code",[t._v("end")]),t._v(" cause the resulting manifests to have\nadditional newlines added in their place, which might be an issue. It can be\nsolved with "),s("code",[t._v("-")]),t._v(", which removes new lines.")])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v('Inside of the "with" scope, we cannot refer to anything outside of that scope.\nWe have to use '),s("a",{attrs:{href:"#variables"}},[t._v("Variables")]),t._v(".")])]),t._v(" "),s("h3",{attrs:{id:"dry-run"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dry-run"}},[t._v("#")]),t._v(" Dry Run")]),t._v(" "),s("p",[t._v("We can see how the templates will be turned into manifests with the "),s("code",[t._v("helm template {chart-name}")]),t._v(" command (it doesn't even require K8s cluster connection).")]),t._v(" "),s("p",[t._v("We can also use the "),s("code",[t._v("helm install {release-name} {char-name} --dry-run --debug")]),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"logic"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#logic"}},[t._v("#")]),t._v(" Logic")]),t._v(" "),s("p",[t._v("We may use functions in the templates when some additional logic is needed.\nThere are 2 syntaxes:")]),t._v(" "),s("ul",[s("li",[t._v("function - "),s("code",[t._v("quote(value)")]),t._v(" "),s("ul",[s("li",[t._v("arguments separated by commas")])])]),t._v(" "),s("li",[t._v("pipeline - "),s("code",[t._v("value | quote")]),t._v(" "),s("ul",[s("li",[t._v("arguments separated by spaces, and placed after\nthe function - "),s("code",[t._v("first_arg | fn other_arg")])])])])]),t._v(" "),s("p",[t._v("Functions come from:")]),t._v(" "),s("ul",[s("li",[t._v("Go templates")]),t._v(" "),s("li",[t._v("Sprig project")]),t._v(" "),s("li",[t._v("Helm itself")])]),t._v(" "),s("h4",{attrs:{id:"function-examples"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#function-examples"}},[t._v("#")]),t._v(" Function Examples")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("default")]),t._v(" - returns a value if exists, if not, returns some provided default")]),t._v(" "),s("li",[s("code",[t._v("quote")]),t._v(" - adds quotes")]),t._v(" "),s("li",[s("code",[t._v("upper")]),t._v(" - transforms to upper-case")]),t._v(" "),s("li",[s("code",[t._v("b64enc")]),t._v(" - encodes to base64")]),t._v(" "),s("li",[s("code",[t._v("trunc")]),t._v(" - truncates value to specified amount of characters (useful for\nlabels, which are limited to 63 characters)")])]),t._v(" "),s("p",[t._v("Operators are also functions:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("eq")])]),t._v(" "),s("li",[s("code",[t._v("ne")])]),t._v(" "),s("li",[s("code",[t._v("gt")])]),t._v(" "),s("li",[s("code",[t._v("and")])]),t._v(" "),s("li",[t._v("etc.")])]),t._v(" "),s("h4",{attrs:{id:"conditionals"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#conditionals"}},[t._v("#")]),t._v(" Conditionals")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" and "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("adminEmail")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("or "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("serviceAccountJson "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("existingSecret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v('It translates to: "if (adminEmail AND (serviceAccountJson OR existingSecret))"')]),t._v(" "),s("p",[t._v("Example of usage:")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" extensions/v1beta1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Ingress\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("app.kubernetes.io/name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" if .Values.service.name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# - removes newline")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" .Values.service.name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(' trimSuffix "'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' "'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" else "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" .Chart.Name "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" end "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("We can build the manifest differently depending on some values.")]),t._v(" "),s("h4",{attrs:{id:"loops"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#loops"}},[t._v("#")]),t._v(" Loops")]),t._v(" "),s("p",[t._v("An example:")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" extensions/v1beta1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Ingress\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" range .Values.ingress.hosts "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" .hostname "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" quote "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("http")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" range .paths "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" .path "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("backend")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("serviceName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" .service "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("servicePort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" http\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" end "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" end"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("values.yaml")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ingress")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hosts")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostname")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" frontend.local\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/public"')]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("service")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"frontend"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/admin"')]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("service")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"admin"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostname")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" backend.local\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("Inside of the loop, we cannot refer to anything outside of the range's scope.\nWe have to use "),s("a",{attrs:{href:"#variables"}},[t._v("Variables")]),t._v(".")])]),t._v(" "),s("h4",{attrs:{id:"variables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#variables"}},[t._v("#")]),t._v(" Variables")]),t._v(" "),s("p",[t._v('Variables allow us to define values within templates and name them. They are\nuseful when using the "with" scoping or loops, since within these we cannot\nrefer to anything outside of their scope. However, we can refer to variables.')]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("div",{staticClass:"highlight-lines"},[s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" $defaultPortName "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("= .Values.defaultPortName "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# variable definition")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" with .Values.config "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" .type "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" .port "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tagetPort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" $defaultPortName "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# we use a variable to get a value outside of .Values.config, that we're scoped to")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" end "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("Variables may also point to some scope of the source and we can\ntraverse that scope when using the variable.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" $currentHost "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("= . "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# catches current scope")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" range .paths "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# we can use {{ $currentHost.whatever }} here to break out of the .paths scope")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" end "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("h4",{attrs:{id:"named-templates"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#named-templates"}},[t._v("#")]),t._v(" Named Templates")]),t._v(" "),s("p",[t._v("We can create a "),s("code",[t._v("_helpers.tpl")]),t._v(" (just a convention name) file to store various\nsnippets that we want to reuse (like some conditionals, loops, or just manifest\nparts). The contents should be wrapped in the "),s("code",[t._v("define")]),t._v(" function which allows us\nto name the function.")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("Global Names The names of named templates are global. It's a good practice to\nprefix the name with chart's name. This way we can skip potential conflicts in\nsub-charts.")])]),t._v(" "),s("p",[t._v("To use these named templates we need to "),s("code",[t._v("include")]),t._v(" them in other templates. We\ncould also use Go's "),s("code",[t._v("template")]),t._v(" instead to include it, but it is not as\nfunctional (we can't pipe the output to another function).")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Libraries")]),t._v(" "),s("p",[t._v('A chart of type "library" would contain functions only, without any templates.')])]),t._v(" "),s("h3",{attrs:{id:"dependencies"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dependencies"}},[t._v("#")]),t._v(" Dependencies")]),t._v(" "),s("p",[t._v("Chart's dependencies can be included in the following ways:")]),t._v(" "),s("ul",[s("li",[t._v("by placing chart's folders in "),s("code",[t._v("/charts")]),t._v(" of the main chart")]),t._v(" "),s("li",[t._v("by placing archives of charts in "),s("code",[t._v("/charts")]),t._v(" of the main chart")]),t._v(" "),s("li",[s("code",[t._v("dependencies")]),t._v(" array in the "),s("code",[t._v("Chart.yaml")]),t._v(" file.")]),t._v(" "),s("li",[s("code",[t._v("dependencies")]),t._v(" array in the "),s("code",[t._v("requirements.yaml")]),t._v(" file - OBSOLETE! The\n"),s("code",[t._v("Chart.yaml")]),t._v(" file is recommended nowadays.")])]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("helm dependency update {chart-name}")]),t._v(" fetches latest versions of\ndependencies matching ranges defined in the "),s("code",[t._v("Chart.yaml")]),t._v(". Helm downloads\ndependencies as "),s("code",[t._v("tgz")]),t._v(" archives and places them in the "),s("code",[t._v("/charts")]),t._v(" directory.")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Chart.lock")]),t._v(" "),s("p",[t._v("Similarly as in npm, Helm has the "),s("code",[t._v("Chart.lock")]),t._v(" file, which lists the exact\nversions of dependencies that have been pulled. Running "),s("code",[t._v("helm dependency build {chart-name}")]),t._v(" downloads dependencies as defined in that file.")]),t._v(" "),s("p",[t._v("Helm 2 used the "),s("code",[t._v("requirements.lock")]),t._v(" file for the same purpose.")])]),t._v(" "),s("h4",{attrs:{id:"conditions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#conditions"}},[t._v("#")]),t._v(" Conditions")]),t._v(" "),s("p",[t._v("Dependencies can be installed conditionally, based on configuration values\n("),s("code",[t._v("values.yaml")]),t._v("). An example:")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dependencies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mongodb\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 7.8.x\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("repository")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//some"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("repo.com\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("condition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" database.enabled "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# values.yaml")]),t._v("\n")])])]),s("p",[t._v("Another way is to tag dependencies with "),s("code",[t._v("tag")]),t._v(" and set that tag to "),s("code",[t._v("true/false")]),t._v("\nin the "),s("code",[t._v("values.yaml")]),t._v(". It's useful if multiple dependencies shoud be\nenabled/disabled at once.")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Priority")]),t._v(" "),s("p",[t._v("Condition overwrite tags")])]),t._v(" "),s("h2",{attrs:{id:"repositories"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#repositories"}},[t._v("#")]),t._v(" Repositories")]),t._v(" "),s("p",[t._v("There are repositories of charts. We can add them to Helm CLI for it to be able\nto fetch charts. There is an official repository at\n"),s("a",{attrs:{href:"https://kubernetes-charts.storage.googleapis.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://kubernetes-charts.storage.googleapis.com"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("p",[t._v("By default, Helm CLI does not have any repositories configured.")]),t._v(" "),s("p",[t._v("Repos can be added with "),s("code",[t._v("helm repo add repo-name repo-url")]),t._v(".")]),t._v(" "),s("p",[t._v("A repository is just an HTTP server containing the charts and the "),s("code",[t._v("index.yaml")]),t._v("\nfile describing charts.")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Chartmuseum")]),t._v(" "),s("p",[t._v("There's an HTTP server implementation dedicated for hosting Helm chart\nrepositories - "),s("a",{attrs:{href:"https://chartmuseum.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Chartmuseum"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"publishing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#publishing"}},[t._v("#")]),t._v(" Publishing")]),t._v(" "),s("p",[t._v("Before publishing our charts, we need to package them into archives. It can be\ndone with the "),s("code",[t._v("helm package {chart-name}")]),t._v(" command. It results in a "),s("code",[t._v(".tgz")]),t._v("\narchive being created.")]),t._v(" "),s("h2",{attrs:{id:"internals"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#internals"}},[t._v("#")]),t._v(" Internals")]),t._v(" "),s("p",[t._v("Helm stores details of releases in the K8s cluster itself - as secrets. They are\nstored in the same namespace as the application/release.")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Helm 2")]),t._v(" "),s("p",[t._v("In Helm 2, there was also a server-side component running on the cluster - Tiller.\nHelm CLI would communicate with Tiller.")]),t._v(" "),s("p",[t._v("In Helm 3, Tiller no longer exists. Helm CLI communicates with the K8s API only.")])]),t._v(" "),s("h3",{attrs:{id:"three-way-merge-patch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#three-way-merge-patch"}},[t._v("#")]),t._v(" Three-Way Merge Patch")]),t._v(" "),s("p",[t._v("Helm applies upgrades/downgrades by looking at the following:")]),t._v(" "),s("ul",[s("li",[t._v("last installed chart version")]),t._v(" "),s("li",[t._v("chart version to be installed")]),t._v(" "),s("li",[t._v("current state of the app")])]),t._v(" "),s("p",[t._v("It's possible that the release has been modified outside of Helm control (e.g.,\nmanually via "),s("em",[t._v("kubectl")]),t._v(' or some operator). Even in such situations, Helm is able\nto persist these manual changes, as long as they don\'t conflict with the chart\nto be installed. Before applying the change, it marges the target state with the\n"external" modifications.')]),t._v(" "),s("h2",{attrs:{id:"namespaces"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#namespaces"}},[t._v("#")]),t._v(" Namespaces")]),t._v(" "),s("p",[t._v('By default, Helm installs resources into the "default" namespace. However, we\ncan specify another namespace while installing.')]),t._v(" "),s("h2",{attrs:{id:"commands"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commands"}},[t._v("#")]),t._v(" Commands")]),t._v(" "),s("h3",{attrs:{id:"install-a-chart"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install-a-chart"}},[t._v("#")]),t._v(" Install a Chart")]),t._v(" "),s("p",[s("code",[t._v("helm install {release-name} {chart-name}")])]),t._v(" "),s("h3",{attrs:{id:"uninstall-a-chart"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#uninstall-a-chart"}},[t._v("#")]),t._v(" Uninstall a Chart")]),t._v(" "),s("p",[t._v("To remove a release, together with Helm-managed secrets metadata, run "),s("code",[t._v("helm uninstall {release-name}")]),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"get-manifest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-manifest"}},[t._v("#")]),t._v(" Get Manifest")]),t._v(" "),s("p",[t._v("We can have a look at the YAMLs of the deployed release with "),s("code",[t._v("helm get manifest {release-name}")]),t._v(".")])])}),[],!1,null,null,null);e.default=n.exports}}]);