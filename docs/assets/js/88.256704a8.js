(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{580:function(e,t,i){"use strict";i.r(t);var n=i(22),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h1",{attrs:{id:"category-theory"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#category-theory"}},[e._v("#")]),e._v(" Category Theory")]),e._v(" "),i("h2",{attrs:{id:"monoid"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#monoid"}},[e._v("#")]),e._v(" Monoid")]),e._v(" "),i("p",[e._v("A monoid is a combination of a set and an operation. In programming, a set is a\ndata type (like a "),i("code",[e._v("DateTime")]),e._v("). A "),i("strong",[e._v("monoid")]),e._v(" is a subset of a "),i("em",[e._v("semigroup")]),e._v(", it is\nmore strict than the latter. A monoid has the following requirements:")]),e._v(" "),i("ul",[i("li",[e._v("operation must be "),i("em",[e._v("binary")]),e._v(" - it acts on two inputs (e.g. addition, or a\nfunction "),i("code",[e._v("(Car, Car) => Car")]),e._v(")")]),e._v(" "),i("li",[e._v("it must be "),i("em",[e._v("associative")]),e._v(" - e.g., "),i("code",[e._v("(1 + 2) + 3 = 1 + (2 + 3)")]),e._v(" - order of\nevaluation does not matter, the result is the same")]),e._v(" "),i("li",[e._v("there's a "),i("em",[e._v("neutral element")]),e._v(", sometimes also called the "),i("em",[e._v("identity element")]),e._v(" -\nit's a value that is neutral in a sense that it does not incur any change, it\ndoes nothing when an operation is applied to it. An example of an identity\nelement in the addition operation is "),i("code",[e._v("0")]),e._v(", because "),i("code",[e._v("a + 0 = a")]),e._v(". For\nmultiplication, the identity element is "),i("code",[e._v("1")]),e._v(", since "),i("code",[e._v("a * 1 = a")]),e._v(".")])]),e._v(" "),i("p",[e._v("A monoid could also be described as a triplet consisiting of:")]),e._v(" "),i("ul",[i("li",[e._v("a set")]),e._v(" "),i("li",[e._v("an operation")]),e._v(" "),i("li",[e._v("an identity element")])]),e._v(" "),i("p",[e._v("The above triplet must satisfy the aforementioned rules.")]),e._v(" "),i("h3",{attrs:{id:"examples"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),i("ul",[i("li",[e._v("Addition on numbers, 0 is the identity")]),e._v(" "),i("li",[e._v("Multiplication on numbers, 1 is the identity")]),e._v(" "),i("li",[e._v("AND on boolean numbers, 1 is the identity")]),e._v(" "),i("li",[e._v("OR on boolean numbers, 0 is the identity")]),e._v(" "),i("li",[e._v("Concatenation on a collection, empty collection is the identity")])])])}),[],!1,null,null,null);t.default=a.exports}}]);