(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{427:function(t,e,s){t.exports=s.p+"assets/img/player-and-finish-line.66d8c2f1.png"},428:function(t,e,s){t.exports=s.p+"assets/img/sprite-shape-collision.1d39dc56.png"},562:function(t,e,s){"use strict";s.r(e);var a=s(22),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"frontmatter-title"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[t._v("#")]),t._v(" "+t._s(t.$frontmatter.title))]),t._v(" "),a("p",[t._v("To run Unity, you need to install Unity Hub, which is a manager of Unity\ninstallations. Through the Unity Hub, install the lateset release of Unity, and\nrun.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Apple Silicon")]),t._v(" "),a("p",[t._v("On Apple Silicon macs, for some reason, Intel binary is being downloaded by\ndefault. You should manually select the Apple Silicon version instead.")])]),t._v(" "),a("h2",{attrs:{id:"hierarchy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hierarchy"}},[t._v("#")]),t._v(" Hierarchy")]),t._v(" "),a("p",[t._v("Game objects create a hierarchy. We can place items under other items. Then, the\npositioning of the child items is relative to their parents.")]),t._v(" "),a("h2",{attrs:{id:"scripting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scripting"}},[t._v("#")]),t._v(" Scripting")]),t._v(" "),a("p",[t._v("Scripts can be added to the Assets, and they should be attached to some game\nobject to work.")]),t._v(" "),a("h3",{attrs:{id:"editor-access"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#editor-access"}},[t._v("#")]),t._v(" Editor Access")]),t._v(" "),a("p",[t._v("To modify script's (class's) fields in the Unity Editor UI, one of these should be applied:")]),t._v(" "),a("ul",[a("li",[t._v("the field should be decorated with "),a("code",[t._v("SerializeField")])]),t._v(" "),a("li",[t._v("the field shuld be "),a("code",[t._v("public")])])]),t._v(" "),a("p",[t._v("The first approach is the recommended one, since a "),a("code",[t._v("public")]),t._v(" field makes it\naccessible to any other script as well.")]),t._v(" "),a("h3",{attrs:{id:"external-access"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#external-access"}},[t._v("#")]),t._v(" External Access")]),t._v(" "),a("p",[t._v("Each script is a class. We can access instances of these classes from other\nscripts (classes) as follows:")]),t._v(" "),a("div",{staticClass:"language-cs extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cs"}},[a("code",[a("span",{pre:!0,attrs:{class:"token generic-method"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("FindObjectOfType")]),a("span",{pre:!0,attrs:{class:"token generic class-name"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("PlayerController"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("DoSomething")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("The "),a("code",[t._v("FindObjectOfType")]),t._v(" comes from the "),a("code",[t._v("MonoBehaviour")]),t._v(" base class. It returns the\nfirst found instance of "),a("code",[t._v("PlayerController")]),t._v(" (I'm assuming that there is such a\nscript defined). We can also use "),a("code",[t._v("FindObjectsOfType<>()")]),t._v(" if we expect there to\nbe many instances of some script.")]),t._v(" "),a("p",[t._v("The C# "),a("code",[t._v("public")]),t._v(" keyword should be assigned to those components of our classes\nthat we want to be accessible from the outside, by other scripts.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("FindObjectOfType<>()")]),t._v(" method may also be used to find components\nplaced on other game objects.")])]),t._v(" "),a("h2",{attrs:{id:"collisions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#collisions"}},[t._v("#")]),t._v(" Collisions")]),t._v(" "),a("p",[t._v("If we want to collide with some object, both objects should have a "),a("strong",[t._v("Collider")]),t._v(".\nAdditionally, to make the objects move on collision, they need to have\n"),a("strong",[t._v("Rigidbody")]),t._v(". Rigidbody is what adds physics to the objects. One of its\nproperties is "),a("strong",[t._v("Gravity")]),t._v(". In 2D top-down games, Gravity should be brought down\nto 0, otherwise the Rigidbody will cause the game object to fall down.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Physics Sprite")]),t._v(" "),a("p",[t._v("Instead of creating a Sprite, attaching a Collider and Rigidbody, we can create\na Physics Dynamic Sprite, which out-of-the box is a Circle with a Collider and\nRigidbody.")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("Falling Through")]),t._v(" "),a("p",[t._v("The default Rigidbody's Collision Detection is "),a("strong",[t._v("Discrete")]),t._v(". It's better for\nperformance, but it might cause the collision detection to fail sometimes\n(when?). A fix for that is to change the detection to "),a("strong",[t._v("Continuous")]),t._v(".")])]),t._v(" "),a("h3",{attrs:{id:"collision-trigger"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#collision-trigger"}},[t._v("#")]),t._v(" Collision Trigger")]),t._v(" "),a("p",[t._v("Sometimes we don't need physics to be involved in a collision. All we might want\nis to know that some object touched another. An example of that is a player\nreaching the finish line")]),t._v(" "),a("p",[a("img",{attrs:{src:s(427),alt:""}})]),t._v(" "),a("p",[t._v("For such cases, a Collider has the "),a("strong",[t._v("isTrigger")]),t._v(" property. A proper script\nbehind object with such a collider will fire anytime another collider touches\nthis collider.")]),t._v(" "),a("div",{staticClass:"language-cs extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cs"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FinishLine")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token type-list"}},[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MonoBehaviour")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token return-type class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OnTriggerEnter2D")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collider2D")]),t._v(" other"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Debug"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Finish Line reached!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("Physical Collision")]),t._v(" "),a("p",[t._v("When "),a("strong",[t._v("isTrigger")]),t._v(' is selected, the Collider no longer works as "collision\nbarrier", meaning that objects will not physically hit each other. Instead, the\nobjects will just pass through each other.')]),t._v(" "),a("p",[t._v("An alternative approach is to leave the "),a("strong",[t._v("isTrigger")]),t._v(" unchecked and to use the\n"),a("strong",[t._v("OnCollisionEnter2D")]),t._v(" method instead of the "),a("strong",[t._v("OnTriggerEnter2D")]),t._v(" one.")])]),t._v(" "),a("h2",{attrs:{id:"timing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#timing"}},[t._v("#")]),t._v(" Timing")]),t._v(" "),a("p",[t._v("The spped of movement of objects should not rely on FPS of the host machine. We\nshould multiply the object's translation by the "),a("code",[t._v("Time.deltaTime")]),t._v(", which is the\ntime frame. This way, the intended translation will be properly divided for each\nframe giving us the desired translation after each second.")]),t._v(" "),a("h2",{attrs:{id:"units"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#units"}},[t._v("#")]),t._v(" Units")]),t._v(" "),a("p",[t._v('Unity does not have any particuar unit system. While designing our games, we\nshould come up with our own way understanding these units. One way is to treat 1\nUnity unit as 1 meter. This way, the grid on the screen divides the world in 1m\nx 1m squares. We can scale game objects with regard to that system. The same\nway, we can calculate speed of objects, to make things look and behave\n"naturally".')]),t._v(" "),a("h2",{attrs:{id:"sprite-shape"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sprite-shape"}},[t._v("#")]),t._v(" Sprite Shape")]),t._v(" "),a("p",[t._v("Sprite Shape is perfect for creating ground in 2D platformer games. It allows us\nto modify the shape of the land easily with vector graphics tools. We should add\nan "),a("strong",[t._v("Edge Collider")]),t._v(" to it, and it will automatically follow the Sprite Shape's\nshape. Sometimes it's necessary to adjust the offset of the Shape Controller to\nhave the collision exactly where we want it to be.")]),t._v(" "),a("p",[a("img",{attrs:{src:s(428),alt:""}})]),t._v(" "),a("h2",{attrs:{id:"camera-follow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#camera-follow"}},[t._v("#")]),t._v(" Camera Follow")]),t._v(" "),a("p",[t._v("To have the Camera following the player, we can do one of:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("script the camera position to be updated in every frame to player's position")]),t._v(" "),a("div",{staticClass:"language-cs extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cs"}},[a("code",[t._v("transform"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("position "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _thingToFollow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("transform"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("position "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("Vector3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// we're adding -10 on Z axis to keep the camera away from the game world")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("use "),a("strong",[t._v("Cinemachine")]),t._v(" - a package for camera management")])])]),t._v(" "),a("h2",{attrs:{id:"tagging"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tagging"}},[t._v("#")]),t._v(" Tagging")]),t._v(" "),a("p",[t._v("Tagging is a useful concept in Unity that allows us to add a simple string\nmetadata to our game objects. Multiple objects might reuse the same tag. In our\nscripts, we can read tags of other objects to create some conditions. For\nexample, a Finish Line should only activate its script when Player reaches it.\nOther objects passing through it might not necessarily need to invoke any\nactions. The way to do it would be to check the tag of the "),a("code",[t._v("other")]),t._v(" object.")]),t._v(" "),a("div",{staticClass:"language-cs extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cs"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FinishLine")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token type-list"}},[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MonoBehaviour")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token return-type class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("OnTriggerEnter2D")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collider2D")]),t._v(" other"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("other"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Player"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        Debug"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Finish Line reached!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Hierarchy")]),t._v(" "),a("p",[t._v("If a top-level object in some hierarchy has a tag, but some other, lower-level\nobject has a Collider, the tag will still be readable.")])]),t._v(" "),a("h2",{attrs:{id:"delay"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#delay"}},[t._v("#")]),t._v(" Delay")]),t._v(" "),a("p",[t._v("There are two ways to delay some action in Unity:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Invoke()")]),t._v(" - works like "),a("code",[t._v("setTimeout")]),t._v(" in JS. Weirdly, instead of accepting a\ndelegate, it accepts a name of the method to be invoked, as string. That means\nthat it used reflection under the hood, which is not perfect.")]),t._v(" "),a("li",[t._v("Coroutines")])]),t._v(" "),a("p",[t._v("(What about async?)")]),t._v(" "),a("h2",{attrs:{id:"particles"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#particles"}},[t._v("#")]),t._v(" Particles")]),t._v(" "),a("p",[t._v("Unity suppors Particle System. Any game object might have Particle System\ncomponent added. Another way is to add a game object for the particles and to\nattach the particles to some other object.")]),t._v(" "),a("p",[t._v("Particles are very configurable, we can set all the looks of it as we'd like. An\ninteresting setting is the "),a("strong",[t._v("Simulation Space")]),t._v('. By default it\'s set to "Local",\nwhich means that the particles will always be positioned relatively to the\nobject they\'re attached to. An alternative is the "World" setting, which makes\nthe particles position relative to the game world, making some effects more\nvalid. If player bleeds, we don\'t want to blood drips to move with the player,\nbut rather to stay where they were released.')]),t._v(" "),a("p",[t._v("Another important settings are:")]),t._v(" "),a("ul",[a("li",[t._v("Looping")]),t._v(" "),a("li",[t._v("Play On Awake")])])])}),[],!1,null,null,null);e.default=n.exports}}]);