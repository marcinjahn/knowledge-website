(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{498:function(e,t,a){"use strict";a.r(t);var s=a(31),i=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"queue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#queue"}},[e._v("#")]),e._v(" Queue")]),e._v(" "),a("p",[e._v("A queue may be implemented using:")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("array")]),e._v(" - the array would have to be \"circular\" to keep up with\nenqueuing/dequeuing items. Without it, we'd have to increase array's size with\nenqueue operation taking the last index to infinity.")]),e._v(" "),a("li",[a("strong",[e._v("linked list")]),e._v(" - simpler implementation, there is no issue resizing an array.")]),e._v(" "),a("li",[a("strong",[e._v("two stacks")]),e._v(" - items are added to one stack. When dequeuing, the all items are\nmoved to another stack, and then read from it.")])]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("Stack")]),e._v(" "),a("p",[e._v("Similarly, a stack may be implemented with two queues.")])]),e._v(" "),a("h2",{attrs:{id:"reversing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reversing"}},[e._v("#")]),e._v(" Reversing")]),e._v(" "),a("p",[e._v("To reverse a queue, we can use a stack. First, we move all items from the queue\nto a stack. Then, we move all the items from the stack to the queue.")])])}),[],!1,null,null,null);t.default=i.exports}}]);