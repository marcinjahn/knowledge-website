(window.webpackJsonp=window.webpackJsonp||[]).push([[138],{624:function(e,t,a){"use strict";a.r(t);var r=a(22),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"frontmatter-title"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[e._v("#")]),e._v(" "+e._s(e.$frontmatter.title))]),e._v(" "),a("p",[e._v('gRPC - GRPC Remote Procedure Call. The "G" could also just stand for "Google"\nwhich is one of the main drive forces behind the protocol. It\'s a high\nperformance, open-source universal RPC framework. gRPC uses Protocol Buffers v3.')]),e._v(" "),a("p",[a("strong",[e._v("Highlights:")])]),e._v(" "),a("ul",[a("li",[e._v("high serialization/deserialization performance (especially deserialization\nwhen compared to JSON)")]),e._v(" "),a("li",[e._v("wide adoption in programming languages")]),e._v(" "),a("li",[e._v("binary communication (no JSON, XML, whatever) - small size")]),e._v(" "),a("li",[e._v("contract-based")]),e._v(" "),a("li",[e._v("requires HTTP/2 (HTTPS by default)")]),e._v(" "),a("li",[e._v("uni- and bi-directional streaming")]),e._v(" "),a("li",[e._v("great for low-power devices (IoT)")])]),e._v(" "),a("p",[a("strong",[e._v("Usage:")])]),e._v(" "),a("ul",[a("li",[e._v("backend-to-backend communication, e.g. between microservices")])]),e._v(" "),a("p",[e._v("Usage on the frontend is not as straightforward as with REST.")]),e._v(" "),a("h2",{attrs:{id:"contracts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#contracts"}},[e._v("#")]),e._v(" Contracts")]),e._v(" "),a("p",[e._v("The Server and the Client are generated using the ProtoBuf.")]),e._v(" "),a("h3",{attrs:{id:"protobuf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#protobuf"}},[e._v("#")]),e._v(" ProtoBuf")]),e._v(" "),a("p",[a("strong",[e._v("Protocol Buffers (ProtoBuf)")]),e._v(" is a language for defining interfaces.")]),e._v(" "),a("ul",[a("li",[e._v("language/platform neutral")]),e._v(" "),a("li",[e._v("extensible")]),e._v(" "),a("li",[e._v("serializable")]),e._v(" "),a("li",[e._v("not specific to gRPC")])]),e._v(" "),a("p",[e._v("It comes with its own set of types for defining data.")]),e._v(" "),a("h3",{attrs:{id:"example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[e._v("#")]),e._v(" Example")]),e._v(" "),a("p",[e._v("Request:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('1: 100\n2: "Hello There"\n')])])]),a("p",[e._v("Response:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("1: 94.5\n2: 15.4\n3: .5\n")])])]),a("h2",{attrs:{id:"streaming"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#streaming"}},[e._v("#")]),e._v(" Streaming")]),e._v(" "),a("p",[e._v("Thanks to HTTP/2 base, gRPC supports streaming. It's very similar to how\nwebsockets work. The streaming works in any direction (client -> server or\nserver -> client), it can also be both ways at the same time.")]),e._v(" "),a("p",[e._v("To support streaming, the protobuf file needs to explicitly contain such\ninformation attached to the input of the chosen rpc.")]),e._v(" "),a("h2",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[e._v("#")]),e._v(" Usage")]),e._v(" "),a("h3",{attrs:{id:"net"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#net"}},[e._v("#")]),e._v(" .NET")]),e._v(" "),a("p",[e._v("Read "),a("RouterLink",{attrs:{to:"/programming/dotnet/grpc.html"}},[e._v("here")]),e._v(".")],1),e._v(" "),a("h3",{attrs:{id:"grpc-web"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grpc-web"}},[e._v("#")]),e._v(" gRPC-Web")]),e._v(" "),a("p",[e._v("gRPC-Web is the way to call gRPC servers from the frontend layer (from JS).\nASP.NET Core supports it via an additional NuGet package.")]),e._v(" "),a("h2",{attrs:{id:"tools"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tools"}},[e._v("#")]),e._v(" Tools")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/bloomrpc/bloomrpc",target:"_blank",rel:"noopener noreferrer"}},[e._v("BloomRPC"),a("OutboundLink")],1),e._v('- "Postman" for gRPC')])]),e._v(" "),a("h2",{attrs:{id:"references"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[e._v("#")]),e._v(" References")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://app.pluralsight.com/library/courses/aspdotnet-core-6-using-grpc/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Pluralsight"),a("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=s.exports}}]);