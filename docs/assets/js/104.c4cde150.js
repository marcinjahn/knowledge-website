(window.webpackJsonp=window.webpackJsonp||[]).push([[104],{554:function(t,s,a){"use strict";a.r(s);var e=a(31),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"solidity"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#solidity"}},[t._v("#")]),t._v(" Solidity")]),t._v(" "),a("p",[t._v("One of the languages supported by Ethereum is "),a("strong",[t._v("Solidity")]),t._v(". It is updated quite\nfrequently, breaking changes should be expected.")]),t._v(" "),a("p",[t._v("Solidity is used for the creation of "),a("strong",[t._v("smart contracts")]),t._v(".")]),t._v(" "),a("p",[t._v("A simple program:")]),t._v(" "),a("div",{staticClass:"language-sol extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sol"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pragma")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("solidity")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token version number"}},[t._v("0.8.11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("contract")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Counter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("initialize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("view")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("returns")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("increment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("decrement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("A deployed smart contract is accessible to anyone who has an identity on the\nblockchain (human or a program).")]),t._v(" "),a("h2",{attrs:{id:"features"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#features"}},[t._v("#")]),t._v(" Features")]),t._v(" "),a("h3",{attrs:{id:"data-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data-types"}},[t._v("#")]),t._v(" Data types")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("address")]),t._v(" - refers to identity of participants")]),t._v(" "),a("li",[a("code",[t._v("struct")]),t._v(" - allows creation of structures of data")]),t._v(" "),a("li",[a("code",[t._v("mapping")]),t._v(" - defines a dictionary/map/hashtable")]),t._v(" "),a("li",[a("code",[t._v("enum")]),t._v(" - enumeration")]),t._v(" "),a("li",[a("code",[t._v("array")]),t._v(" - e.g. "),a("code",[t._v("Proposal[] proposals;")])])]),t._v(" "),a("h4",{attrs:{id:"structs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#structs"}},[t._v("#")]),t._v(" Structs")]),t._v(" "),a("p",[t._v("Example")]),t._v(" "),a("div",{staticClass:"language-solidity extra-class"},[a("pre",{pre:!0,attrs:{class:"language-solidity"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Voter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" weight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" voted"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" vote"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"enums"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#enums"}},[t._v("#")]),t._v(" Enums")]),t._v(" "),a("p",[t._v("Example:")]),t._v(" "),a("div",{staticClass:"language-solidity extra-class"},[a("pre",{pre:!0,attrs:{class:"language-solidity"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Phase")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Init"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Regs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Vote"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Done"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nPhase "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" state "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Phase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Init"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"loops"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#loops"}},[t._v("#")]),t._v(" Loops")]),t._v(" "),a("p",[t._v("Loops looks like in C. If the content is just one-line ling, curly brackets may\nbe skipped.")]),t._v(" "),a("div",{staticClass:"language-solidity extra-class"},[a("pre",{pre:!0,attrs:{class:"language-solidity"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" prop "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" prop "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" numProposals"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" prop"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    proposals"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Proposal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#functions"}},[t._v("#")]),t._v(" Functions")]),t._v(" "),a("div",{staticClass:"language-solidity extra-class"},[a("pre",{pre:!0,attrs:{class:"language-solidity"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("changeState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Phase x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// content...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"storage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#storage"}},[t._v("#")]),t._v(" Storage")]),t._v(" "),a("p",[t._v("Variables within functions may either end up in the blockchain or not. Simple\nvariables, by default, are not recorded on the blockchain. Structs are recorded\n(by default). We can change that behavior with keywords:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("memory")]),t._v(" - variable is not stored")]),t._v(" "),a("li",[a("code",[t._v("storage")]),t._v(" - variable is stored")])]),t._v(" "),a("p",[t._v("Example:")]),t._v(" "),a("div",{staticClass:"language-solidity extra-class"},[a("pre",{pre:!0,attrs:{class:"language-solidity"}},[a("code",[t._v("Voter "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("memory")]),t._v(" sender "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" voters"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("code",[t._v("Voter")]),t._v(" is a struct. By adding the "),a("code",[t._v("memory")]),t._v(" keyword, we made the variable\ntemporary. It will not be stored on the blockchain.")]),t._v(" "),a("h4",{attrs:{id:"view-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#view-functions"}},[t._v("#")]),t._v(" View Functions")]),t._v(" "),a("p",[t._v("If a function is marked with a "),a("code",[t._v("view")]),t._v(" keyword, it is not allowed to modify the\nstate and its execution is not recorded on the blockchain.")]),t._v(" "),a("p",[t._v("If "),a("code",[t._v("view")]),t._v(" is missing, every invocation is recorded in the ledger.")]),t._v(" "),a("h4",{attrs:{id:"returning-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#returning-data"}},[t._v("#")]),t._v(" Returning data")]),t._v(" "),a("p",[t._v("Functions may return data. In such a case, we may define a variable that will\nbe returned and write some data into it.")]),t._v(" "),a("div",{staticClass:"language-solidity extra-class"},[a("pre",{pre:!0,attrs:{class:"language-solidity"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("myFunc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("returns")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" someData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    someData "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"constructor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#constructor"}},[t._v("#")]),t._v(" Constructor")]),t._v(" "),a("p",[t._v("A contract might have a constructor. It is run during the deployment of the contract\nto the blockchain. The deployment is done by some participant of the blockchain.\nThe deployment may be performed with some ethers attached. These ethers are added\nto the contact's funds. It's no different from other functions' execution. These can\nalso accept funds.")]),t._v(" "),a("div",{staticClass:"language-solidity extra-class"},[a("pre",{pre:!0,attrs:{class:"language-solidity"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constructor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" numProposals"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    chairperson "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    voters"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("chairperson"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("weight "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" prop "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" prop "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" numProposals"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" prop"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        proposals"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Proposal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"visiblity-modifiers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#visiblity-modifiers"}},[t._v("#")]),t._v(" Visiblity Modifiers")]),t._v(" "),a("p",[t._v("Dat and functions may be defined as "),a("code",[t._v("public")]),t._v(", making them reachable by the\npublic. Without that keyword, the data/function is internal to the contract and\nmay be called only within that contract.")]),t._v(" "),a("p",[t._v("It's analogical to encapsulation in the OOP.")]),t._v(" "),a("h3",{attrs:{id:"access-modifiers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#access-modifiers"}},[t._v("#")]),t._v(" Access Modifiers")]),t._v(" "),a("p",[t._v("They are used to guard access to data/functions. They are similar to functions.")]),t._v(" "),a("div",{staticClass:"language-solidity extra-class"},[a("pre",{pre:!0,attrs:{class:"language-solidity"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("modifier")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("validPhase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Phase reqPhase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" reqPhase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Parameters")]),t._v(" "),a("p",[t._v("The modifier above accepts a parameter. A modifier might be defined without any\nparameters.")])]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("_;")]),t._v(" invokes the actual function that is guarded by the modifier.\n(can we do some actions in the modifier post function execution?)")]),t._v(" "),a("p",[t._v('To use a modifier, we need to state it in the "header" of a function, like this:')]),t._v(" "),a("div",{staticClass:"language-solidity extra-class"},[a("pre",{pre:!0,attrs:{class:"language-solidity"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("register")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" voter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("validPhase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Phase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Regs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("The function above will invoke the modifier with the value "),a("code",[t._v("Phase.Regs")]),t._v(" (it's an\nenum) passed to it. Only if that modifier succeeds, the transaction may be\nregistered.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Multiple modifiers")]),t._v(" "),a("p",[t._v("Multiple modifiers may be applied to a single function. They are executed in the\nsame sequence as they are listed on a function.")]),t._v(" "),a("p",[t._v("If any of the modifiers in a chain fails, the rest will not be executed.")])]),t._v(" "),a("h3",{attrs:{id:"payable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#payable"}},[t._v("#")]),t._v(" Payable")]),t._v(" "),a("p",[t._v("A function with the "),a("code",[t._v("payable")]),t._v(" keyword accepts payments (in "),a("code",[t._v("msg.value")]),t._v(").")]),t._v(" "),a("h3",{attrs:{id:"sender"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sender"}},[t._v("#")]),t._v(" Sender")]),t._v(" "),a("p",[t._v("Every function invocation has access to the "),a("code",[t._v("msg.sender")]),t._v(" field that reveals the\naddress of the caller.")]),t._v(" "),a("h3",{attrs:{id:"built-in-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#built-in-functions"}},[t._v("#")]),t._v(" Built-in functions")]),t._v(" "),a("h4",{attrs:{id:"revert"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#revert"}},[t._v("#")]),t._v(" Revert")]),t._v(" "),a("p",[t._v("If something is wrong in the execution (e.g., some validation failed),\n"),a("code",[t._v("revert()")]),t._v(" reverts the transaction. Revert is called automatically by the Smart\nContract in case of runtime error.")]),t._v(" "),a("p",[t._v("In case of a revert, all changes done during the execution are reverted.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("A reverted transaction is not recorded on the blockchain.")])]),t._v(" "),a("h4",{attrs:{id:"require"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#require"}},[t._v("#")]),t._v(" Require")]),t._v(" "),a("p",[a("code",[t._v("require(condition)")]),t._v(" is a basic assert operation used for validation. If the\nprovided condition if false, "),a("code",[t._v("revert()")]),t._v(" will be called.")]),t._v(" "),a("p",[a("code",[t._v("require")]),t._v(" does not consume all the remaining gas offered to pay (like "),a("code",[t._v("assert")]),t._v("\ndoes). It should be used in cases where the condition being false is a normal\nsituation that is expected to happen (e.g., when validating user inputs).")]),t._v(" "),a("p",[t._v("It's useful in access modifiers.")]),t._v(" "),a("h4",{attrs:{id:"assert"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#assert"}},[t._v("#")]),t._v(" Assert")]),t._v(" "),a("p",[a("code",[t._v("assert(condition)")]),t._v(" works basically the same as "),a("code",[t._v("require")]),t._v(", but it uses up all\nthe remaining "),a("em",[t._v("gas")]),t._v(".")]),t._v(" "),a("p",[t._v("It should be used when checking conditions that are crucial and are not expected\nto ever be false.")]),t._v(" "),a("h3",{attrs:{id:"events"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[t._v("#")]),t._v(" Events")]),t._v(" "),a("p",[t._v("Smart contracts may define and emit events.")]),t._v(" "),a("p",[t._v("A definition example:")]),t._v(" "),a("div",{staticClass:"language-solidity extra-class"},[a("pre",{pre:!0,attrs:{class:"language-solidity"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("event")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AuctionEnded")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" winner"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v(" highestBid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Emitting example:")]),t._v(" "),a("div",{staticClass:"language-solidity extra-class"},[a("pre",{pre:!0,attrs:{class:"language-solidity"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("emit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AuctionEnded")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("highestBidder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" highestBid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("Parameters limit")]),t._v(" "),a("p",[t._v("Maximum three parameters may be used in an event.")])]),t._v(" "),a("p",[t._v("Events are stored on the blockchain in the block's receipt tree.\nThese events can be retrieved by dapps.")]),t._v(" "),a("h2",{attrs:{id:"remix-ide"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remix-ide"}},[t._v("#")]),t._v(" Remix IDE")]),t._v(" "),a("p",[t._v("It's a web-based IDE for Solidity. It can be found at\n"),a("a",{attrs:{href:"https://remix.ethereum.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://remix.ethereum.org/"),a("OutboundLink")],1),t._v(". It's suitable for\nplayground/learning scenarios. Production apps should use something like\nTruffle.")])])}),[],!1,null,null,null);s.default=n.exports}}]);