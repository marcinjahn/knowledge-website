(window.webpackJsonp=window.webpackJsonp||[]).push([[148],{637:function(t,s,a){"use strict";a.r(s);var e=a(22),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"t-sql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#t-sql"}},[t._v("#")]),t._v(" T-SQL")]),t._v(" "),a("p",[t._v("Every RDBMS vendor uses their own variation of SQL. MS implemented T-SQL\n(Transactional Structured Query Language) for their MS SQL Server offering.")]),t._v(" "),a("p",[t._v("SQL is strongly typed.")]),t._v(" "),a("h2",{attrs:{id:"types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#types"}},[t._v("#")]),t._v(" Types")]),t._v(" "),a("ul",[a("li",[t._v("text:\n"),a("ul",[a("li",[a("em",[t._v("char(n)")]),t._v(" - fixed length - good when we know the length or when length is\nless than 3 (more optimized than varchar(n)) (non-Unicode)")]),t._v(" "),a("li",[a("em",[t._v("varchar(n)")]),t._v(" - variable length (up to "),a("em",[t._v("n")]),t._v(") (non-Unicode)")]),t._v(" "),a("li",[a("em",[t._v("nchar(n)")]),t._v(" - fixed length (Unicode)")]),t._v(" "),a("li",[a("em",[t._v("nvarchar(n)")]),t._v(" - variable length (up to "),a("em",[t._v("n")]),t._v(") (Unicode)")])])]),t._v(" "),a("li",[t._v("integers:\n"),a("ul",[a("li",[a("em",[t._v("tinyint")]),t._v(" (1 byte - 0-255)")]),t._v(" "),a("li",[a("em",[t._v("smallint")]),t._v(" (2 bytes)")]),t._v(" "),a("li",[a("em",[t._v("int")]),t._v(" (4 bytes)")]),t._v(" "),a("li",[a("em",[t._v("bigint")]),t._v(" (8 bytes)")])])]),t._v(" "),a("li",[t._v("decimals:\n"),a("ul",[a("li",[a("em",[t._v("decimal/numeric")]),t._v(" (5-17 bytes) - optionally, we can provide precision and\nscale")]),t._v(" "),a("li",[a("em",[t._v("money")]),t._v(" (8 bytes) - 4 decimal places")]),t._v(" "),a("li",[a("em",[t._v("smallmoney")]),t._v(" (4 bytes)")])])]),t._v(" "),a("li",[t._v("date/time:\n"),a("ul",[a("li",[a("em",[t._v("date")]),t._v(" (3 bytes)")]),t._v(" "),a("li",[a("em",[t._v("time")]),t._v(" - time precision might be adjusted")]),t._v(" "),a("li",[a("em",[t._v("datetime")]),t._v(" (8 bytes) - legacy type")]),t._v(" "),a("li",[a("em",[t._v("smalldatetime")]),t._v(" (4 bytes)")]),t._v(" "),a("li",[a("em",[t._v("datetime2")]),t._v(" (6-8 bytes) - adjustable precision, it's a good choice in\ngeneral")]),t._v(" "),a("li",[a("em",[t._v("datetimeoffset")]),t._v(" (10 bytes) - with timezone")])])]),t._v(" "),a("li",[t._v("boolean\n"),a("ul",[a("li",[a("em",[t._v("bit")])])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("money")]),t._v(" "),a("p",[t._v("The "),a("em",[t._v("money")]),t._v(" and "),a("em",[t._v("smallmoney")]),t._v(" sizes are unique to SQL Server, so potentially it's\nnot the best choice.")])]),t._v(" "),a("h3",{attrs:{id:"casting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#casting"}},[t._v("#")]),t._v(" Casting")]),t._v(" "),a("p",[t._v("We can cast types using the "),a("code",[t._v("CAST")]),t._v(" function. E.g.:")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" CAST"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECIMAL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Without the cast, the resoult would be '3'")]),t._v("\n")])])]),a("p",[t._v("SQL can also cast by itself trying to guess the intention:")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'4'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Returns 8 by converting '4' to a number")]),t._v("\n")])])]),a("h2",{attrs:{id:"functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#functions"}},[t._v("#")]),t._v(" Functions")]),t._v(" "),a("p",[t._v("SQL Server comes with a bunch of buit-in functions (like "),a("code",[t._v("GETDATE")]),t._v(", "),a("code",[t._v("SQRT")]),t._v(",\netc.), which we can use in our queries. We can also create our own functions.")]),t._v(" "),a("h2",{attrs:{id:"operations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#operations"}},[t._v("#")]),t._v(" Operations")]),t._v(" "),a("h3",{attrs:{id:"creating-a-db"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-db"}},[t._v("#")]),t._v(" Creating a DB")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DATABASE")]),t._v(" BobsShoes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nGO\n")])])]),a("h3",{attrs:{id:"creating-a-table"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-table"}},[t._v("#")]),t._v(" Creating a table")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- set the right database context")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("USE")]),t._v(" BobsShoes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nGO\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- schema (namespace)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SCHEMA")]),t._v(" Orders \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AUTHORIZATION")]),t._v(" dbo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nGO\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Customers "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    CustID "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IDENTITY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" PK_Customers_CustID "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    CustName nvarchar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    CustStreet nvarchar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    CustCity nvarchar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    CustStateProv nvarchar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    CustCountry nvarchar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    CustPostalCode nvarchar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    SalutationID "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" FK_Customers_SaluationID_Salutations_SalutationID \n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REFERENCES")]),t._v(" Orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Salutations "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SalutationID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Stock "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    StockID "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IDENTITY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" PK_Stock_StockID "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    \n    StockSKU "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    StockSize "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    StockName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    StockPrice "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("numeric")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Orders "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("  \n    OrderID "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IDENTITY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" PK_Orders_OrderID "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    OrderDate "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("date")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    OrderRequestedDate "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("date")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    OrderDeliveryDate datetime2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    CustID "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--,")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" FK_Orders_CustID_Customers_CustID \n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOREIGN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REFERENCES")]),t._v(" Orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Customers "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CustID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    OrderIsExpedited "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OrderItems "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    OrderItemID "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IDENTITY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" PK_OrderItems_OrderItemID "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    OrderID "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--,")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" FK_OrderItems_OrderID_Orders_OrderID\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOREIGN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REFERENCES")]),t._v(" Orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Orders "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OrderID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    StockID "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--,")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" FK_OrderItems_StockID_Stock_StockID\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOREIGN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REFERENCES")]),t._v(" Orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Stock "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("StockID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Quantity "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("smallint")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Discount "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("numeric")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("TotalPrice")]),t._v(" is a calculated colum (the values can be persisted with the\n"),a("code",[t._v("PERSISTED")]),t._v(" keyword")]),t._v(" "),a("li",[a("code",[t._v("Orders.OrderTracking")]),t._v(" - "),a("code",[t._v("Orders")]),t._v(" is the schema, "),a("code",[t._v("OrdreTracking")]),t._v(" is table's\nname")])]),t._v(" "),a("h3",{attrs:{id:"inserting-rows"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#inserting-rows"}},[t._v("#")]),t._v(" Inserting rows")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" Orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Stock "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        StockSKU"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n        StockName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n        StockSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n        StockPrice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'OXFORD01'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Oxford'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'10_D'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'BABYSHO1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'BabySneakers'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'HEELS001'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Killer Heels'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'7'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("75.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"queries"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#queries"}},[t._v("#")]),t._v(" Queries")]),t._v(" "),a("h4",{attrs:{id:"order-of-execution"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#order-of-execution"}},[t._v("#")]),t._v(" Order of Execution")]),t._v(" "),a("p",[t._v("A "),a("code",[t._v("SELECT")]),t._v(" statement is executed in the following order:")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("FROM")]),t._v(" - dataset is prepared")]),t._v(" "),a("li",[a("code",[t._v("WHERE")]),t._v(" filters data using predicates")]),t._v(" "),a("li",[a("code",[t._v("GROUP BY")]),t._v(" - rows combined into groups")]),t._v(" "),a("li",[a("code",[t._v("HAVING")]),t._v(" - another filter - for groups this time")]),t._v(" "),a("li",[a("code",[t._v("SELECT")]),t._v(" - evaluates a provided list of expressions on every row")]),t._v(" "),a("li",[a("code",[t._v("ORDER BY")]),t._v(" - ordering")]),t._v(" "),a("li",[a("code",[t._v("OFFSET - FETCH")]),t._v(" - limit the number of rows")])]),t._v(" "),a("p",[t._v("Examples:")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ABC'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" Something\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Orders\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- returns:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Something")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- ---------")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 'ABC'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 'ABC'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 'ABC'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- ... -- as many 'ABC's as many rows the Orders table has")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Just SELECT")]),t._v(" "),a("p",[t._v("SQL Server allows execution of queries that have only the "),a("code",[t._v("SELECT")]),t._v(" clause, such\nas "),a("code",[t._v("SELECT 2*2;")]),t._v(".")])]),t._v(" "),a("h4",{attrs:{id:"join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#join"}},[t._v("#")]),t._v(" JOIN")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("CROSS JOIN")]),t._v(" - A "),a("strong",[t._v("Cartesian Product")]),t._v(" of two tables - every entity from table A\nis matched with every element from table B - it's rarely useful")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Customers\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CROSS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" Orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Result:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Customer")]),t._v(" "),a("th",[t._v("Country")]),t._v(" "),a("th",[t._v("OrderID")]),t._v(" "),a("th",[t._v("OrderDate")]),t._v(" "),a("th",[t._v("Customer")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Bob")]),t._v(" "),a("td",[t._v("NULL")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("2019-01-01")]),t._v(" "),a("td",[t._v("Jack")])]),t._v(" "),a("tr",[a("td",[t._v("Chen")]),t._v(" "),a("td",[t._v("China")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("2019-01-01")]),t._v(" "),a("td",[t._v("Jack")])]),t._v(" "),a("tr",[a("td",[t._v("Jack")]),t._v(" "),a("td",[t._v("USA")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("2019-01-01")]),t._v(" "),a("td",[t._v("Jack")])]),t._v(" "),a("tr",[a("td",[t._v("Kelly")]),t._v(" "),a("td",[t._v("USA")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("2019-01-01")]),t._v(" "),a("td",[t._v("Jack")])]),t._v(" "),a("tr",[a("td",[t._v("Sunil")]),t._v(" "),a("td",[t._v("India")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("2019-01-01")]),t._v(" "),a("td",[t._v("Jack")])]),t._v(" "),a("tr",[a("td",[t._v("Bob")]),t._v(" "),a("td",[t._v("NULL")]),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("2019-01-01")]),t._v(" "),a("td",[t._v("Bob")])]),t._v(" "),a("tr",[a("td",[t._v("Chen")]),t._v(" "),a("td",[t._v("China")]),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("2019-01-01")]),t._v(" "),a("td",[t._v("Bob")])]),t._v(" "),a("tr",[a("td",[t._v("Jack")]),t._v(" "),a("td",[t._v("USA")]),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("2019-01-01")]),t._v(" "),a("td",[t._v("Bob")])]),t._v(" "),a("tr",[a("td",[t._v("Kelly")]),t._v(" "),a("td",[t._v("USA")]),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("2019-01-01")]),t._v(" "),a("td",[t._v("Bob")])]),t._v(" "),a("tr",[a("td",[t._v("Sunil")]),t._v(" "),a("td",[t._v("India")]),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("2019-01-01")]),t._v(" "),a("td",[t._v("Bob")])]),t._v(" "),a("tr",[a("td",[t._v("Bob")]),t._v(" "),a("td",[t._v("NULL")]),t._v(" "),a("td",[t._v("3")]),t._v(" "),a("td",[t._v("2019-01-15")]),t._v(" "),a("td",[t._v("Jack")])]),t._v(" "),a("tr",[a("td",[t._v("Chen")]),t._v(" "),a("td",[t._v("China")]),t._v(" "),a("td",[t._v("3")]),t._v(" "),a("td",[t._v("2019-01-15")]),t._v(" "),a("td",[t._v("Jack")])]),t._v(" "),a("tr",[a("td",[t._v("Jack")]),t._v(" "),a("td",[t._v("USA")]),t._v(" "),a("td",[t._v("3")]),t._v(" "),a("td",[t._v("2019-01-15")]),t._v(" "),a("td",[t._v("Jack")])]),t._v(" "),a("tr",[a("td",[t._v("Kelly")]),t._v(" "),a("td",[t._v("USA")]),t._v(" "),a("td",[t._v("3")]),t._v(" "),a("td",[t._v("2019-01-15")]),t._v(" "),a("td",[t._v("Jack")])]),t._v(" "),a("tr",[a("td",[t._v("Sunil")]),t._v(" "),a("td",[t._v("India")]),t._v(" "),a("td",[t._v("3")]),t._v(" "),a("td",[t._v("2019-01-15")]),t._v(" "),a("td",[t._v("Jack")])]),t._v(" "),a("tr",[a("td",[t._v("Bob")]),t._v(" "),a("td",[t._v("NULL")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("2019-01-16")]),t._v(" "),a("td",[t._v("Chen")])]),t._v(" "),a("tr",[a("td",[t._v("Chen")]),t._v(" "),a("td",[t._v("China")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("2019-01-16")]),t._v(" "),a("td",[t._v("Chen")])]),t._v(" "),a("tr",[a("td",[t._v("Jack")]),t._v(" "),a("td",[t._v("USA")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("2019-01-16")]),t._v(" "),a("td",[t._v("Chen")])]),t._v(" "),a("tr",[a("td",[t._v("Kelly")]),t._v(" "),a("td",[t._v("USA")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("2019-01-16")]),t._v(" "),a("td",[t._v("Chen")])]),t._v(" "),a("tr",[a("td",[t._v("Sunil")]),t._v(" "),a("td",[t._v("India")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("2019-01-16")]),t._v(" "),a("td",[t._v("Chen")])])])]),t._v(" "),a("p",[t._v("We have 5 Customers, and 4 Orders. We see every customer combined with every\norder using cartesian product - 20 rows. It doesn't really make any sense.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("INNER JOIN")]),t._v(" - It starts with a CROSS JOIN, and then uses a "),a("em",[t._v("Join Predicate")]),t._v("\n(like "),a("code",[t._v("ON A.Name = B.Name")]),t._v(") to extract only the rows where the predicate\nevaluates to true. E.g. if predicate was "),a("code",[t._v("ON 1=1")]),t._v(", we'd get the same result as\nfor the CROSS JOIN.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Customers "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" C\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" Orders "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" O\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Customer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" O"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Customer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Result:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Customer")]),t._v(" "),a("th",[t._v("Country")]),t._v(" "),a("th",[t._v("OrderID")]),t._v(" "),a("th",[t._v("OrderDate")]),t._v(" "),a("th",[t._v("Customer")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Jack")]),t._v(" "),a("td",[t._v("USA")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("2019-01-01")]),t._v(" "),a("td",[t._v("Jack")])]),t._v(" "),a("tr",[a("td",[t._v("Bob")]),t._v(" "),a("td",[t._v("NULL")]),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("2019-01-01")]),t._v(" "),a("td",[t._v("Bob")])]),t._v(" "),a("tr",[a("td",[t._v("Jack")]),t._v(" "),a("td",[t._v("USA")]),t._v(" "),a("td",[t._v("3")]),t._v(" "),a("td",[t._v("2019-01-15")]),t._v(" "),a("td",[t._v("Jack")])]),t._v(" "),a("tr",[a("td",[t._v("Chen")]),t._v(" "),a("td",[t._v("China")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("2019-01-16")]),t._v(" "),a("td",[t._v("Chen")])])])]),t._v(" "),a("p",[t._v("Jack did two orders. We do not see the customers that didn't do any orders.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("LEFT/RIGHT OUTER JOIN")]),t._v(" - Works like an INNER JOIN, however, we can specify that\nentities of one of the sets (tables) will be takes even if predicate is not\nsatisfied. The choice of the set is made with "),a("code",[t._v("LEFT")]),t._v(" or "),a("code",[t._v("RIGHT")]),t._v(". The selected\nset is a "),a("strong",[t._v("Reserved Set")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Customers "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" C\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OUTER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" Orders "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" O\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Customer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" O"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Customer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("Result:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Customer")]),t._v(" "),a("th",[t._v("Country")]),t._v(" "),a("th",[t._v("OrderID")]),t._v(" "),a("th",[t._v("OrderDate")]),t._v(" "),a("th",[t._v("Customer")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Bob")]),t._v(" "),a("td",[t._v("NULL")]),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("2019-01-01")]),t._v(" "),a("td",[t._v("Bob")])]),t._v(" "),a("tr",[a("td",[t._v("Chen")]),t._v(" "),a("td",[t._v("China")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("2019-01-16")]),t._v(" "),a("td",[t._v("Chen")])]),t._v(" "),a("tr",[a("td",[t._v("Jack")]),t._v(" "),a("td",[t._v("USA")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("2019-01-01")]),t._v(" "),a("td",[t._v("Jack")])]),t._v(" "),a("tr",[a("td",[t._v("Jack")]),t._v(" "),a("td",[t._v("USA")]),t._v(" "),a("td",[t._v("3")]),t._v(" "),a("td",[t._v("2019-01-15")]),t._v(" "),a("td",[t._v("Jack")])]),t._v(" "),a("tr",[a("td",[t._v("Kelly")]),t._v(" "),a("td",[t._v("USA")]),t._v(" "),a("td",[t._v("NULL")]),t._v(" "),a("td",[t._v("NULL")]),t._v(" "),a("td",[t._v("NULL")])]),t._v(" "),a("tr",[a("td",[t._v("Sunil")]),t._v(" "),a("td",[t._v("India")]),t._v(" "),a("td",[t._v("NULL")]),t._v(" "),a("td",[t._v("NULL")]),t._v(" "),a("td",[t._v("NULL")])])])]),t._v(" "),a("p",[t._v("The customers which did not make any orders are present as well. The columns\nof the Orders table are NULLed for them.")])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Default")]),t._v(" "),a("p",[t._v("If we just use the "),a("code",[t._v("JOIN")]),t._v(" keyword in the query, the "),a("code",[t._v("INNER JOIN")]),t._v(" will be used.")]),t._v(" "),a("p",[t._v("If we use "),a("code",[t._v("LEFT/RIGHT JOIN")]),t._v(", the "),a("code",[t._v("LEFT/RIGHT OUTER JOIN")]),t._v(" will be used.")])]),t._v(" "),a("h4",{attrs:{id:"where"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#where"}},[t._v("#")]),t._v(" WHERE")]),t._v(" "),a("p",[t._v("Due to the fact that SQL includes NULLs, we have to deal with "),a("strong",[t._v("Ternary Logic")]),t._v(".\nOn top of "),a("code",[t._v("true")]),t._v("/"),a("code",[t._v("false")]),t._v(" there is a possibllity of an "),a("code",[t._v("unknown")]),t._v(" result. To test\nfor "),a("code",[t._v("unknown")]),t._v(" we use the "),a("code",[t._v("IS NULL")]),t._v("/"),a("code",[t._v("IS NOT NULL")]),t._v(" operators.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Not Equal")]),t._v(" "),a("p",[t._v("Both the "),a("code",[t._v("!=")]),t._v(" and "),a("code",[t._v("<>")]),t._v(" are inequality operators. It's better to use the "),a("code",[t._v("<>")]),t._v("\nthough since it follows the ISO standard.")])]),t._v(" "),a("h4",{attrs:{id:"group-by"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#group-by"}},[t._v("#")]),t._v(" GROUP BY")]),t._v(" "),a("p",[a("code",[t._v("GROUP BY")]),t._v(' is useful when we do not care about individual entities, but rather\nabout some aggreagation of them ("How many people...", "What\'s the average...").\nWe get a single answer for the entire group instead of getting answers for every\nindividual.')]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Country"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" Count "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- COUNT(*) refers to each group")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Customers\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" Country "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" Country"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("table",[a("thead",[a("tr",[a("th",[t._v("Country")]),t._v(" "),a("th",[t._v("Count")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("China")]),t._v(" "),a("td",[t._v("1")])]),t._v(" "),a("tr",[a("td",[t._v("India")]),t._v(" "),a("td",[t._v("1")])]),t._v(" "),a("tr",[a("td",[t._v("USA")]),t._v(" "),a("td",[t._v("2")])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("SELECT *")]),t._v(" "),a("p",[t._v("When using "),a("code",[t._v("GROUP BY")]),t._v(", we can no longer use "),a("code",[t._v("SELECT *")]),t._v(". "),a("code",[t._v("GROUP BY")]),t._v(" returns an\naggreagation on some colums, the other columns are not included.")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("NULL")]),t._v(" "),a("p",[t._v("When using "),a("code",[t._v("GROUP BY")]),t._v(" on some column, the rows with the NULL value on that\ncolumn fall into the same group (NULL).")])]),t._v(" "),a("h5",{attrs:{id:"having"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#having"}},[t._v("#")]),t._v(" HAVING")]),t._v(" "),a("p",[t._v("After grouping we can apply filtering on top of it - using the "),a("code",[t._v("HAVING")]),t._v(" clause.\nThe difference from "),a("code",[t._v("WHERE")]),t._v(" is the fact that "),a("code",[t._v("WHERE")]),t._v(" is applied to individual\nrows, while "),a("code",[t._v("HAVING")]),t._v(" is applied to groups. Basically, the order of when they are\napplied differs.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Country"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" Count\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Customers\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" Country "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" Country\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("HAVING")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- We cannot use the 'Count' alias here")]),t._v("\n")])])]),a("h4",{attrs:{id:"select"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#select"}},[t._v("#")]),t._v(" SELECT")]),t._v(" "),a("p",[t._v("Some remarks:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("We cannot create expressions based on aliases used in different expressions.\nFor example, "),a("code",[t._v("SELECT (Quantity * Price) AS Total, 0.9 * Total FROM Items;")]),t._v("\nwill not work, because "),a("code",[t._v("Total")]),t._v(" will be unrecognized.")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("DISTINCT")]),t._v(" eliminates duplicates (NULLs are treated as equal). It looks at all\nthe "),a("code",[t._v("SELECT")]),t._v("ed columns and removes rows that are exactly the same.")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DISTINCT")]),t._v(" Country\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Customers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("ALL")]),t._v(" "),a("p",[t._v("Without "),a("code",[t._v("DISTINCT")]),t._v(", every "),a("code",[t._v("SELECT")]),t._v(" is actually a "),a("code",[t._v("SELECT ALL")]),t._v(" - it returns\nall the rows that were retrieved.")])])]),t._v(" "),a("li",[a("p",[t._v("Dealing with NULLs:")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("ISNULL(X, Y)")]),t._v(" function replaces column X (if it's null) with Y. It's a\nsimplified version of a more general "),a("code",[t._v("COALESCE")]),t._v(" function (which is\navailable in other RDBMSs as well).")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DISTINCT")]),t._v(" ISNULL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Country"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'N/A'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" Country\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Customers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])])])]),t._v(" "),a("h4",{attrs:{id:"order-by"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#order-by"}},[t._v("#")]),t._v(" ORDER BY")]),t._v(" "),a("p",[t._v("Some facts:")]),t._v(" "),a("ul",[a("li",[t._v("NULLs have always the lowest ordering value (Postgres uses the opposite logic,\nbut allows to change that)")]),t._v(" "),a("li",[t._v("we can refer to aliases defined in "),a("code",[t._v("SELECT")])]),t._v(" "),a("li",[t._v("ascending order is the default")]),t._v(" "),a("li",[t._v("the order of rows that have the same values for the column(s) we're ordering by is\nundeterministic")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Orders\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" OrderDate "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DESC")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- With GROUP BY")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SUM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Quantity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" NumbersOfItemsSold\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" OrderItems\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" Item\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" NumbersOfItemsSold\n")])])]),a("h2",{attrs:{id:"tips"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tips"}},[t._v("#")]),t._v(" Tips")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("TOP")]),t._v(" is an SQL Server-only feature")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("OFFSET - FETCH")]),t._v(" is a more standard way, it also simplifies paging")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("SUM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Quantity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" NumbersOfItemsSold\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" OrderItems\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GROUP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" Item\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ORDER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" NumbersOfItemsSold "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DESC")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OFFSET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ROWS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FETCH")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("NEXT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ROWS")]),t._v(" ONLY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Like TOP(3), but with paging")]),t._v("\n")])])])])])])}),[],!1,null,null,null);s.default=n.exports}}]);