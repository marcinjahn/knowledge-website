(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{421:function(t,e,a){"use strict";a.r(e);var s=a(31),o=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"dapps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dapps"}},[t._v("#")]),t._v(" Dapps")]),t._v(" "),a("p",[t._v("Dapps (decentralized applications) are user-facing apps that invoke Smart\nContracts.")]),t._v(" "),a("h2",{attrs:{id:"tools"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tools"}},[t._v("#")]),t._v(" Tools")]),t._v(" "),a("h3",{attrs:{id:"truffle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#truffle"}},[t._v("#")]),t._v(" Truffle")]),t._v(" "),a("p",[t._v("Truffle is a CLI tool for developing dapps.")]),t._v(" "),a("p",[t._v("The dapps usually have the following project structure:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("{app-name}")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("{app-name}-contracts")]),t._v(" - stores smart contracts")]),t._v(" "),a("li",[a("code",[t._v("{app-name}-app")]),t._v(" - stores the web app")])])])]),t._v(" "),a("p",[t._v("Truffle commands:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("truffle init")]),t._v(" initializes a directory for smart contracts.")]),t._v(" "),a("li",[a("code",[t._v("truffle compile")]),t._v(" compiles Solidity files and creates a JSON file that\nrepresents the "),a("em",[t._v("applicaton binary interface (ABI)")]),t._v(". It defines the interface\nthat will be used to communicate between a web app and a smart contract.")])]),t._v(" "),a("p",[t._v("Each contract needs to be specified in migrations script to be deployed.")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("truffle migrate --reset")]),t._v(" - deploys smart contracts. The "),a("code",[t._v("--reset")]),t._v(" redeploys\nexisting contracts and it is a viable option only in developmnent. Production\nsmart contracts are immutable.")])]),t._v(" "),a("h3",{attrs:{id:"ganache"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ganache"}},[t._v("#")]),t._v(" Ganache")]),t._v(" "),a("p",[t._v("Ganache is a blockchain running locally for testing. It's useful while developing\ndapps or smart contracts. It's similar to what Remix IDE offers in the browser.")]),t._v(" "),a("h3",{attrs:{id:"metamask"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#metamask"}},[t._v("#")]),t._v(" MetaMask")]),t._v(" "),a("p",[t._v("MetaMask is a wallet browser extension that allows to connect to the blockchain from the\nbrowser. It can be used in combination with Ganache for local development.")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("Ganache Network ID")]),t._v(" "),a("p",[t._v("For some reason, MetaMask does not want to connect with the defaul Ganache\nnetworkId (5777). Changing Ganache's networkId to 1337 solves the problem.")])])])}),[],!1,null,null,null);e.default=o.exports}}]);