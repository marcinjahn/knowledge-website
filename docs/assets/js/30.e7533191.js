(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{463:function(e,t,s){"use strict";s.r(t);var a=s(31),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"microsoft-identity"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#microsoft-identity"}},[e._v("#")]),e._v(" Microsoft Identity")]),e._v(" "),s("h2",{attrs:{id:"access-token-vs-id-token"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#access-token-vs-id-token"}},[e._v("#")]),e._v(" Access Token vs. ID Token")]),e._v(" "),s("p",[e._v("OAuth2 protocol is used for "),s("strong",[e._v("authorization")]),e._v(" - to allow apps to get access to\nusers' resources without having the actual users' credentials to these\nresources. Instead, the app gets permission to retrieve an access token that\ngrants access to some resource.")]),e._v(" "),s("p",[e._v("ID Token is similar, but it's used for "),s("strong",[e._v("authentication")]),e._v(". Another difference is\nthat the access tokens are to be used by:")]),e._v(" "),s("ul",[s("li",[e._v("identity providers (that issue them)")]),e._v(" "),s("li",[e._v("resources (that give access to some data (or not) based on claims in the\ntokens)")])]),e._v(" "),s("p",[e._v("The apps that read that data for the users are not supposed to look into the\naccess tokens (and they are not the "),s("em",[e._v("audience")]),e._v(")! However, they are allowed and\nexpected to read the ID Tokens to learn who the user is. The actual "),s("em",[e._v("audience")]),e._v("\nof the ID Token is the app that is supposed to display user's name.")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),s("p",[e._v("Microsoft Identity implements OAuth2 and OpenID Connect standards.")])]),e._v(" "),s("p",[e._v("Access Token cannot contain permissions for multiple different services. One\naccess taken can have multiple permissions, but only in scope of a single\nresource.")]),e._v(" "),s("h2",{attrs:{id:"b2x"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#b2x"}},[e._v("#")]),e._v(" B2X")]),e._v(" "),s("h3",{attrs:{id:"b2b"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#b2b"}},[e._v("#")]),e._v(" B2B")]),e._v(" "),s("p",[e._v("AAD tenant may invite users that are not part of the organization. Such users\nwould have "),s("em",[e._v("shadow accounts")]),e._v(" created for the needs of business cooperation.\nAdmin of a tenant might manage access of the external users via the shadow\naccounts. They may be treated as guest accounts in the organization.")]),e._v(" "),s("p",[e._v("Uing B2B, the app may be a signle-tenancy one. The B2B users are treated as\nmembers of the tenant where they were invited to.")]),e._v(" "),s("p",[e._v("B2B is used for cooperation between businesses when they need to work on a\nsingle project together.")]),e._v(" "),s("h3",{attrs:{id:"b2c"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#b2c"}},[e._v("#")]),e._v(" B2C")]),e._v(" "),s("p",[e._v("Allows to federate other identity providers under a single umbrella of AAD.\nWithout B2C, all users have to use Microsoft accounts. With B2C the users can\nuse any OpenId Connect-compliant IdP.")]),e._v(" "),s("p",[e._v("B2C is used to allow access to our product to users from the world, the actual\ncustomers.")]),e._v(" "),s("h2",{attrs:{id:"multi-tenant-apps"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#multi-tenant-apps"}},[e._v("#")]),e._v(" Multi-tenant Apps")]),e._v(" "),s("p",[e._v("AAD apps that are multitenant may be logged-into by users from multiple AAD\ntenants. Every tenant gets its own service principal entity for that app.")]),e._v(" "),s("h2",{attrs:{id:"app-registration-vs-service-principal"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#app-registration-vs-service-principal"}},[e._v("#")]),e._v(" App Registration vs. Service Principal")]),e._v(" "),s("p",[e._v("There is a concept of "),s("strong",[e._v("app registration")]),e._v(" (client ID) and "),s("strong",[e._v("service\nprincipal")]),e._v(" (service principal ID).")]),e._v(" "),s("p",[e._v("In single-tenant apps these are basically the same thing. There's one app\nregistration and one service principal of the app in a single tenant.")]),e._v(" "),s("p",[e._v("In multi-tenant apps the concepts are separate. There is one app registration,\nbut for every tenant that has users accessing the app, there will be a separate\nservice principal created.")]),e._v(" "),s("p",[e._v("App Registration is like a template for multiple service principals to be\ncreated based on it.")]),e._v(" "),s("h2",{attrs:{id:"app-registrations"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#app-registrations"}},[e._v("#")]),e._v(" App Registrations")]),e._v(" "),s("h3",{attrs:{id:"app-roles"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#app-roles"}},[e._v("#")]),e._v(" App Roles")]),e._v(" "),s("p",[e._v("App roles allow to create custom roles that the app understands and works with.\nThese roles can then be assigned to the users of the app. This way we can create\nour own RBAC rules for the app, limiting what different users can access.")]),e._v(" "),s("p",[e._v("The roles may be applied to users/apps in the Enterprise Applications panel of\nAAD. A set of roles would have been created in the app registration. Each tenant\nmight assign different sets of people to these roles via their own service\nprincipals (my app in their tenant).")]),e._v(" "),s("p",[e._v("The assigned roles will be available in the access token.")]),e._v(" "),s("h3",{attrs:{id:"api-permissions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api-permissions"}},[e._v("#")]),e._v(" API Permissions")]),e._v(" "),s("p",[e._v("We can define the allowed set of permissions that the app may ask for. They may\nbe also consented by the admin of a tenant. With that, individual users of the\napp will not be asked for consent.")]),e._v(" "),s("p",[e._v('App may also ask for permissions "dynamically", so the permission does not have\nto be defined in '),s("em",[e._v("API Permissions")]),e._v(" in AAD. In such a case, the user has to\nconsent the permission to allow the app to get the requested data.")])])}),[],!1,null,null,null);t.default=n.exports}}]);