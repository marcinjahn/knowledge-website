(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{403:function(t,a,s){t.exports=s.p+"assets/img/memory.9dd38dce.png"},404:function(t,a,s){t.exports=s.p+"assets/img/pointer-in-memory.9611d464.png"},405:function(t,a,s){t.exports=s.p+"assets/img/array-in-argument.3238d951.png"},406:function(t,a,s){t.exports=s.p+"assets/img/pointer-to-pointer.7695522c.png"},449:function(t,a,s){"use strict";s.r(a);var e=s(31),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"pointers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pointers"}},[t._v("#")]),t._v(" Pointers")]),t._v(" "),e("p",[t._v("A pointer is a variable whose value is the address of some value.")]),t._v(" "),e("p",[t._v("The declaration looks as follows:")]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("my_pointer\n")])])]),e("p",[t._v("The pointer is defined with the type of the value that it points to. This is\nhelpful, because:")]),t._v(" "),e("ul",[e("li",[t._v("we can do various arithmetic operations on pointers (e.g. "),e("code",[t._v("++")]),t._v(") will result in\nthe correct amount of bytes being added.")]),t._v(" "),e("li",[t._v("we can dereference pointers - the runtime needs to know how many bytes a given\npointer points to and how to interpret them (e.g. "),e("code",[t._v("int")]),t._v(" and "),e("code",[t._v("float")]),t._v(" both take\n4 bytes, but the same contents mean different values)")])]),t._v(" "),e("p",[t._v('The "star" sign may be placed adjacent to the type or to the name, or to both:')]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pointer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pointer2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pointer3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h2",{attrs:{id:"use-cases"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#use-cases"}},[t._v("#")]),t._v(" Use-cases")]),t._v(" "),e("p",[t._v("Pointers are useful for:")]),t._v(" "),e("ul",[e("li",[t._v("passing data to functions by reference (e.g. "),e("code",[t._v("void increment(int *number)")]),t._v(")")])]),t._v(" "),e("h2",{attrs:{id:"memory"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#memory"}},[t._v("#")]),t._v(" Memory")]),t._v(" "),e("p",[t._v("Memory is organized as follows:")]),t._v(" "),e("p",[e("img",{attrs:{src:s(403),alt:""}})]),t._v(" "),e("p",[t._v("Each slot is addressed.")]),t._v(" "),e("p",[t._v("A pointer stores an address to some value in memory:")]),t._v(" "),e("p",[e("img",{attrs:{src:s(404),alt:""}})]),t._v(" "),e("p",[t._v("Pointer itself also has an address in memory, it also is some variable.\nIn the case above, "),e("code",[t._v("&p")]),t._v(" is "),e("code",[t._v("64")]),t._v(".")]),t._v(" "),e("h3",{attrs:{id:"variables"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#variables"}},[t._v("#")]),t._v(" Variables")]),t._v(" "),e("p",[t._v('When we define some variable, it will be assigned some address in memory. If we\ntry to print the value under that address, we will find some "random" data:')]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" variable"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pointer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("variable"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pointer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0 or some other trash value")]),t._v("\n\n")])])]),e("h2",{attrs:{id:"operations"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#operations"}},[t._v("#")]),t._v(" Operations")]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" number "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pointer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\npointer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("number"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// address where value 10 is stored")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Dereferencing")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" number_copy "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pointer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns value stored under the address that the pointer contains")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pointer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//updates the value of the `number` variable")]),t._v("\n")])])]),e("h2",{attrs:{id:"arrays"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#arrays"}},[t._v("#")]),t._v(" Arrays")]),t._v(" "),e("p",[t._v("Array can be treated as a pointer to the first element that it contains.")]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" array"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pointer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" array"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// same as &array[0]")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Address of array[0] = %x\\n"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pointer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Value of array[0] = %x\\n"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pointer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\npointer"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Address of array[1] = %x\\n"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pointer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Value of array[1] = %x\\n"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pointer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("Simply:")]),t._v(" "),e("ul",[e("li",[t._v("address: "),e("code",[t._v("&array[i]")]),t._v(" = "),e("code",[t._v("array + i")]),t._v(" = "),e("code",[t._v("pointer + i")]),t._v(";")]),t._v(" "),e("li",[t._v("value: "),e("code",[t._v("array[i]")]),t._v(" = "),e("code",[t._v("*(array + i)")]),t._v(" = "),e("code",[t._v("*(pointer + i)")])])]),t._v(" "),e("div",{staticClass:"custom-block danger"},[e("p",{staticClass:"custom-block-title"},[t._v("Array and pointer are not the same thing")]),t._v(" "),e("p",[t._v("An array variable cannot have its value set to some pointer!")]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[t._v("array "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pointer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//wrong!")]),t._v("\n")])])]),e("p",[t._v("Therefore array variable is not the same as pointer.")])]),t._v(" "),e("h3",{attrs:{id:"arrays-as-arguments"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#arrays-as-arguments"}},[t._v("#")]),t._v(" Arrays as arguments")]),t._v(" "),e("p",[t._v("When a function accepts an array as an argument, a pointer to an array is\npassed:")]),t._v(" "),e("p",[e("img",{attrs:{src:s(405),alt:""}})]),t._v(" "),e("p",[t._v("This means that "),e("code",[t._v("sizeof(A)")]),t._v(" will be different in "),e("code",[t._v("main()")]),t._v(" (20 bytes) and in\n"),e("code",[t._v("SumOfElements()")]),t._v(" (4 bytes - just the size of a pointer to integer!).")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[e("code",[t._v("Function(int[] A)")]),t._v(" is treated the same as "),e("code",[t._v("Function(int *A)")]),t._v(". That's\nwhy the typical C "),e("code",[t._v("main")]),t._v(" function has both "),e("code",[t._v("argv")]),t._v(" and "),e("code",[t._v("argc")]),t._v(" as arguments.")])]),t._v(" "),e("h2",{attrs:{id:"pointer-to-a-pointer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pointer-to-a-pointer"}},[t._v("#")]),t._v(" Pointer to a Pointer")]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("p "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("q "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("p"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("A "),e("code",[t._v("pointer")]),t._v(" points to "),e("code",[t._v("a")]),t._v(". "),e("code",[t._v("pointer2")]),t._v(" points to "),e("code",[t._v("pointer")]),t._v(".")]),t._v(" "),e("p",[e("img",{attrs:{src:s(406),alt:""}})]),t._v(" "),e("p",[t._v("In this exmple we have even "),e("code",[t._v("int ***")]),t._v(" pointer (a pointer to pointer to pointer).")]),t._v(" "),e("p",[t._v('We can also dereference such "deep" pointers. For example:')]),t._v(" "),e("div",{staticClass:"language-c extra-class"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("q"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// prints 6")]),t._v("\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("Arrays")]),t._v(" "),e("p",[t._v("Pointers to pointers are analogical to multi-dimensional arrays. "),e("code",[t._v("int **pointer")]),t._v("\nis analogical to "),e("code",[t._v("int array[][]")]),t._v(". "),e("code",[t._v("pointer")]),t._v(" points to a pointer that points to\nthe first element of the inner array.")]),t._v(" "),e("p",[t._v("In general, replacing "),e("code",[t._v("*")]),t._v(" with "),e("code",[t._v("[]")]),t._v(" is a helpful mental technique in\nunderstanding pointers.")]),t._v(" "),e("p",[e("code",[t._v("int (*p)[];")]),t._v(" - it is analogical to "),e("code",[t._v("int **p;")])])]),t._v(" "),e("h2",{attrs:{id:"references"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[t._v("#")]),t._v(" References")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.youtube.com/watch?v=zuegQmMdy8M",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.youtube.com/watch?v=zuegQmMdy8M"),e("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=n.exports}}]);