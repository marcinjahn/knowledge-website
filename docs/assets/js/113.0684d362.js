(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{497:function(e,t,a){"use strict";a.r(t);var s=a(22),r=function(e){e.options.__data__block__={mermaid_382ee1e3:"flowchart TD\n    Project --\x3e Application --\x3e ServiceA[Service A] & ServiceB[Service B]\n\n    ServiceA --\x3e v1.0[v1.0 - 50%] & v1.1[v1.1 - 50%]\n    ServiceB --\x3e v1.3[v1.3 - 80%] & v2.0-alpha[v2.0-alpha - 20%]\n\n    v1.0 --\x3e i1[Instance 1] & i2[Instance 2 ]\n    v1.1 --\x3e i3[Instance 1]\n    v1.3 --\x3e i4[Instance 1] & i5[Instance 2] & i6[Instance 3]\n    v2.0-alpha --\x3e i7[Instance 1]\n"}},o=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"google-cloud-overview"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#google-cloud-overview"}},[e._v("#")]),e._v(" Google Cloud Overview")]),e._v(" "),a("h2",{attrs:{id:"projects"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#projects"}},[e._v("#")]),e._v(" Projects")]),e._v(" "),a("p",[e._v("GCP is organized into "),a("strong",[e._v("Projects")]),e._v(". Projects may belong to some "),a("strong",[e._v("Organization")]),e._v("\nor not.")]),e._v(" "),a("p",[e._v("Different Projects may be used for Testing and Production. Projects have\nseparation of data. If we store data within the same Project (e.g. Firestore),\nthis data is hosted in the same space (instance?).")]),e._v(" "),a("p",[e._v("GCP Projects are a little bit like Resource Groups on Azure.")]),e._v(" "),a("h2",{attrs:{id:"cli"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cli"}},[e._v("#")]),e._v(" CLI")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://cloud.google.com/sdk/docs/install-sdk",target:"_blank",rel:"noopener noreferrer"}},[e._v("Google Cloud SDK"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("The command is "),a("code",[e._v("gcloud")]),e._v(". After the installation, we should run "),a("code",[e._v("gcloud init")]),e._v(" to\nlog in.")]),e._v(" "),a("p",[e._v("Google Cloud Storage uses the "),a("code",[e._v("gsutil")]),e._v(".")]),e._v(" "),a("p",[a("code",[e._v("gcloud config")]),e._v(" allows us to manage the config of the CLI.")]),e._v(" "),a("h3",{attrs:{id:"cloud-shell"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cloud-shell"}},[e._v("#")]),e._v(" Cloud Shell")]),e._v(" "),a("p",[e._v("Cloud Shell is available from the Web Console interface. Highlights:")]),e._v(" "),a("ul",[a("li",[e._v("has preinstalled SDKs (e.g. dotnet)")]),e._v(" "),a("li",[e._v("allows setting up a web server on some port and accessing it from the outside")])]),e._v(" "),a("h2",{attrs:{id:"app-engine"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#app-engine"}},[e._v("#")]),e._v(" App Engine")]),e._v(" "),a("p",[e._v("It's a GCP's version of Azure's App Service.")]),e._v(" "),a("p",[e._v("A single GCP project may have only one App Engine Application. However, an\nApplication may have multiple Services, where each service is a different app\n(very intuitive (not)).")]),e._v(" "),a("p",[e._v("A Service may have multiple versions, all of them running parallelly. The\ntraffic may be managed for specific versions (e.g., canary deployment). For\nexample, feature braches could be deployed as separate versions of a service.")]),e._v(" "),a("p",[e._v("Each version is scalable horizontally.")]),e._v(" "),a("Mermaid",{attrs:{id:"mermaid_382ee1e3",graph:e.$dataBlock.mermaid_382ee1e3}}),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("Default")]),e._v(" "),a("p",[e._v('By default, when deploying an app to the project, a "default" service name is\nchosen.')])]),e._v(" "),a("h3",{attrs:{id:"url-template"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#url-template"}},[e._v("#")]),e._v(" URL Template")]),e._v(" "),a("p",[e._v("Each service version can be reached independently:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("https://{VERSION_ID}-dot-{SERVICE_ID}-dot-{PROJECT_ID}.{REGION_ID}.r.appspot.com\n")])])]),a("p",[e._v("Support for .NET seems to be really bad. The "),a("a",{attrs:{href:"https://github.com/GoogleCloudPlatform/dotnet-docs-samples",target:"_blank",rel:"noopener noreferrer"}},[e._v("provided\nexamples"),a("OutboundLink")],1),e._v(' are for\n.NET Core 2.1. The best option for .NET apps seems to be the "custom" runtime,\nwhich is basically Docker containers.')]),e._v(" "),a("p",[e._v("Any app running on App Engine requires the "),a("code",[e._v("app.yaml")]),e._v(' file. Here\'s an example of\nit for the "custom" runtime:')]),e._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("runtime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" custom\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("env")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" flex\n")])])]),a("p",[e._v("Here's a full ASP.NET Core Web API project example:\n"),a("a",{attrs:{href:"https://github.com/marcinjahn/gcp-dotnet-example",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[e._v("The app can be deployed with "),a("code",[e._v("gcloud app deploy app.yaml")])]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("Port")]),e._v(" "),a("p",[e._v('Apps using runtimes other than "custom" are expected to listed on the port\nprovided in the '),a("code",[e._v("PORT")]),e._v(' environment variable. The "custom" Docker apps are\nexpected to listed on port '),a("code",[e._v("8080")]),e._v(".")])]),e._v(" "),a("h2",{attrs:{id:"sql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql"}},[e._v("#")]),e._v(" SQL")]),e._v(" "),a("p",[e._v("We can deploy managed SQL databases:")]),e._v(" "),a("ul",[a("li",[e._v("MySQL")]),e._v(" "),a("li",[e._v("PostgreSQL")]),e._v(" "),a("li",[e._v("Microsoft SQL Server")])]),e._v(" "),a("h2",{attrs:{id:"service-accounts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#service-accounts"}},[e._v("#")]),e._v(" Service Accounts")]),e._v(" "),a("p",[e._v("Service Accounts are identities for applications that need to access GCP. We can\nmanaged their access via roles.")]),e._v(" "),a("p",[e._v("In some cases, GCP creates Service Accounts in the background for us. For\nexample, App Engine has its own default Service Account. We can manage it.")]),e._v(" "),a("p",[e._v("Service Accounts are assignable to:")]),e._v(" "),a("ul",[a("li",[e._v("users - a given user can act as this Service Account")]),e._v(" "),a("li",[e._v("GCP resources - it works like Managed Identity on Azure")])]),e._v(" "),a("h2",{attrs:{id:"storage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#storage"}},[e._v("#")]),e._v(" Storage")]),e._v(" "),a("p",[e._v("Google Cloud Storage stores files ("),a("strong",[e._v("Objects")]),e._v(") in "),a("strong",[e._v("Buckets")]),e._v(". Similarly to\nAzure Storage, we can select a tier (here called "),a("strong",[e._v("Storage Class")]),e._v("):")]),e._v(" "),a("ul",[a("li",[e._v("Standard - cheap retreival, expensive storage")]),e._v(" "),a("li",[e._v("Nearline")]),e._v(" "),a("li",[e._v("Coldline")]),e._v(" "),a("li",[e._v("Archive - cheap storage, expensive retrieval")])]),e._v(" "),a("p",[e._v("Access may be managed on the Bucket level, or individually for each Object.")]),e._v(" "),a("p",[a("strong",[e._v("Signed URLs")]),e._v(" is something similar to Azure Storage SAS Tokens. It allows to\ngenerate temporary URLs to read/write Objects.")]),e._v(" "),a("p",[e._v("There's also a way to manage Objects' lifetime, similarly to Azure Blog Storage.\nObjects may change tier after some configured timespan.")]),e._v(" "),a("h2",{attrs:{id:"cloud-tasks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cloud-tasks"}},[e._v("#")]),e._v(" Cloud Tasks")]),e._v(" "),a("p",[e._v("It's similar to Azure Service Bus, or Azure Storage Queue. Cloud Tasks are\nspecifically targetted to be used by App Engine apps.")]),e._v(" "),a("h2",{attrs:{id:"cloud-scheduler"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cloud-scheduler"}},[e._v("#")]),e._v(" Cloud Scheduler")]),e._v(" "),a("p",[e._v("It's a CRON-like service that does something on schedule:")]),e._v(" "),a("ul",[a("li",[e._v("triggers App Engine")]),e._v(" "),a("li",[e._v("sends pub/sub messages")]),e._v(" "),a("li",[e._v("invokes some HTTP endpoint")])]),e._v(" "),a("h2",{attrs:{id:"monitoring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#monitoring"}},[e._v("#")]),e._v(" Monitoring")]),e._v(" "),a("h3",{attrs:{id:"cloud-logging"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cloud-logging"}},[e._v("#")]),e._v(" Cloud Logging")]),e._v(" "),a("p",[e._v("It works like App Insights in Azure.")]),e._v(" "),a("p",[e._v("We can easily write to a log using the CLI:")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("gcloud logging "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("write")]),e._v(" my-log-instance "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"A log example"')]),e._v("\n")])])]),a("p",[e._v("Structured logging is also supported.")]),e._v(" "),a("p",[e._v("App Engine (and other services, such as Functions) are connected to Cloud\nLogging, so stdout/stderr goes there automatically.")]),e._v(" "),a("h3",{attrs:{id:"cloud-debugger"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cloud-debugger"}},[e._v("#")]),e._v(" Cloud Debugger")]),e._v(" "),a("p",[e._v("It's a web interface that allows us to debug our code. We can see callstack and\nvariables live as the app is being executed in GCP.")]),e._v(" "),a("p",[e._v("I saw how it works with interpreted language such as JS. What about compiled\nlanguages such as .NET? Debugger gives us a way to upload the source code, so\npotentially it is able to synchronize the deployed binary with the source code?")]),e._v(" "),a("p",[e._v("We can even add logs to the running code.")]),e._v(" "),a("h3",{attrs:{id:"cloud-trace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cloud-trace"}},[e._v("#")]),e._v(" Cloud Trace")]),e._v(" "),a("p",[e._v("It collects some statistics about our apps (most frequent URLs, latency, etc.).\nWe can also see detailed information about network activity of our apps,\nsimilarly to how Azure App Insights displays it. We can see consecutive network\ncalls being executed by our apps.")]),e._v(" "),a("h2",{attrs:{id:"references"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[e._v("#")]),e._v(" References")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.linkedin.com/learning/google-cloud-platform-gcp-essential-training-for-developers",target:"_blank",rel:"noopener noreferrer"}},[e._v("LinkedIn Google Cloud Platform Essential Training for\nDevelopers"),a("OutboundLink")],1)])],1)}),[],!1,null,null,null);"function"==typeof r&&r(o);t.default=o.exports}}]);