(window.webpackJsonp=window.webpackJsonp||[]).push([[125],{579:function(e,t,a){"use strict";a.r(t);var r=a(31),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"tpm-entities"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tpm-entities"}},[e._v("#")]),e._v(" TPM Entities")]),e._v(" "),a("h2",{attrs:{id:"permanent-entities"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#permanent-entities"}},[e._v("#")]),e._v(" Permanent Entities")]),e._v(" "),a("p",[e._v("Defined by the TPM specification, can't be created or deleted.")]),e._v(" "),a("h3",{attrs:{id:"persistent-hierarchies"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#persistent-hierarchies"}},[e._v("#")]),e._v(" Persistent Hierarchies")]),e._v(" "),a("p",[e._v("TPM 2.0 has three of them:")]),e._v(" "),a("ul",[a("li",[e._v("platform")]),e._v(" "),a("li",[e._v("storage")]),e._v(" "),a("li",[e._v("endorsement")])]),e._v(" "),a("p",[e._v("Each one has a permanent handle. Each has authorizarion value and policy. They\ncan both change. They may be disabled by the admin of the platform of the admin\nof the hierarchy.\nThey may have associated chains of keys and data.")]),e._v(" "),a("h3",{attrs:{id:"ephemeral-hierarchy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ephemeral-hierarchy"}},[e._v("#")]),e._v(" Ephemeral Hierarchy")]),e._v(" "),a("p",[e._v("There is a "),a("code",[e._v("NULL")]),e._v(" hierarchy. It's utilized when the TPM is used as a\ncryptographic coprocessor. Authorizarion and policy are always NULL. It's\nautomatically cleared when TPM goes throught a power cycle.")]),e._v(" "),a("h3",{attrs:{id:"dictionary-attack-lockout-reset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dictionary-attack-lockout-reset"}},[e._v("#")]),e._v(" Dictionary Attack Lockout Reset")]),e._v(" "),a("p",[e._v("It has both authorizarion and policy. It can be changed by the admin of this\nhierarchy. It has no key nor object hierarchy. It may stop users from operating\nafter some password entry failures (for example for 24h). Admin can reset it.")]),e._v(" "),a("h3",{attrs:{id:"pcrs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pcrs"}},[e._v("#")]),e._v(" PCRs")]),e._v(" "),a("p",[e._v("Fixed-size "),a("strong",[e._v("Platform Configuration Registers")]),e._v(". There are a few of them (24\nminumum on a PC). They're accessed by their index. They have authentication\nvalue and policy (generally "),a("code",[e._v("NULL")]),e._v("). Reading value from a PCR does not require\nauthentication. Only one bank (a set of PCRs with the same hash algorithm) is\nmandatory.")]),e._v(" "),a("p",[e._v("We can create keys in TPM and specify that they can only be read if PCR is in a\ngiven state ("),a("em",[e._v("sealing")]),e._v("), or in a state approved by some authority (new in 2.0).\nFor example, an organization could issue an update of BIOS to company's PCs. New\nversion of BIOS will change values in PCRs. However, the organization knows\nwhich values these will be and it can provide new signatures.")]),e._v(" "),a("p",[e._v("They support only "),a("strong",[e._v("Read")]),e._v(" and "),a("strong",[e._v("Extend")]),e._v(" operations. They store system state.")]),e._v(" "),a("p",[e._v("PCRs are extended as follows:")]),e._v(" "),a("ol",[a("li",[e._v("PCR <- 0")]),e._v(" "),a("li",[e._v("PCR <- Hash(PCR || M)")]),e._v(" "),a("li",[e._v("...")])]),e._v(" "),a("p",[e._v("PCR starts with value 0. Then it gets extended by a hash of current PCR\nconcatenated with a "),a("RouterLink",{attrs:{to:"/technologies/security/basic-terms.html#hash"}},[e._v("digest")]),e._v(" M. It's called a\n"),a("strong",[e._v("folding-hash")]),e._v(".")],1),e._v(" "),a("p",[e._v('Since the result is deterministic if we always supply the same "M" (measurement)\nvalues in the same sequence, it can be used to verify if the sequence is as\nexpected.')]),e._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[e._v("Reading PCRs")]),e._v(" "),a("p",[e._v("The result of "),a("code",[e._v("TPM2_CC_PCR_Read")]),e._v(" cannot be trusted. It returns PCR values, but\nwith no security guarantees. An attacker can MITM your communication with the\nTPM, and forge arbitrary "),a("code",[e._v("TPM2_CC_PCR_Read")]),e._v(" responses.")]),e._v(" "),a("p",[e._v("The correct way to read PCR values is through quotes. A quote is a signed\nstatement from the TPM, attesting to its internal state. Use "),a("code",[e._v("TPM2_CC_Quote")]),e._v(" to\nread fresh PCR values. We can use AIK to sign the PCR quote.")])]),e._v(" "),a("h3",{attrs:{id:"reserved-handles"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reserved-handles"}},[e._v("#")]),e._v(" Reserved Handles")]),e._v(" "),a("p",[e._v("May be there or not, depends from the platform specification.")]),e._v(" "),a("h3",{attrs:{id:"password-authorization-session"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#password-authorization-session"}},[e._v("#")]),e._v(" Password Authorization Session")]),e._v(" "),a("p",[e._v("Used for plaintext password authorization.")]),e._v(" "),a("h3",{attrs:{id:"platform-nv-enable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#platform-nv-enable"}},[e._v("#")]),e._v(" Platform NV Enable")]),e._v(" "),a("p",[e._v("When its handle is clear, access to any NV index in the platform hierarchy is\ndenied.")]),e._v(" "),a("h2",{attrs:{id:"nonvolatile-indexes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nonvolatile-indexes"}},[e._v("#")]),e._v(" Nonvolatile Indexes")]),e._v(" "),a("p",[e._v("NVRAM Index. There is some nonvolatile storage in TPM. It can be configured by\nthe user for storage. They aren't considered "),a("em",[e._v("Objects")]),e._v(' due to having more\nattributes than standard object. Reading and writing can be individually\ncontrolled. They can be made into "write once" entities. They have authorization\nvalue and policy. Authorization value can be changed by the owner of the index,\nbut policy cannot - it\'s set during creation of the index. When the hierarchy is\ncleared, the NVRAM indexes associated with that hierarchy are deleted.')]),e._v(" "),a("h2",{attrs:{id:"objects"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#objects"}},[e._v("#")]),e._v(" Objects")]),e._v(" "),a("p",[e._v("It's either a "),a("strong",[e._v("key")]),e._v(" or "),a("strong",[e._v("data")]),e._v(". It has a public part and perhaps (?) a\nprivate part (asymmetric private key, a symmetric key or encrypted data).")]),e._v(" "),a("p",[e._v("Like NVRAM indexes all objects belong to one of four hierarchies: platform,\nstorage, endorsement or NULL. When a hierarchy is cleared all objects in it are\ncleared. They have authorization data and policy. A policy can't be changed\nafter it gets created (like with NV indexes).")]),e._v(" "),a("p",[a("strong",[e._v("Object commands")]),e._v(" can be administrative or user commands. At creation the user\ndecides which of these commands can be performed with the authorization data and\nwhich can be exclusively done with a policy. Some commands can only be done with\na policy no matter how we set the attributes during creation.")]),e._v(" "),a("p",[e._v("Most objects are keys. Using keys or other objects requires using a\nnon-persistent TPM entity - a session.")]),e._v(" "),a("h2",{attrs:{id:"nonpersistent-entities"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nonpersistent-entities"}},[e._v("#")]),e._v(" Nonpersistent Entities")]),e._v(" "),a("p",[e._v("They don't persist through power cycles. Although they can be saved\n("),a("code",[e._v("TOM2_ContextSave")]),e._v(") TPM disallows loading saved content after a power cycle.")]),e._v(" "),a("p",[e._v("There are several classes of them.")]),e._v(" "),a("h2",{attrs:{id:"persistent-entities"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#persistent-entities"}},[e._v("#")]),e._v(" Persistent Entities")]),e._v(" "),a("p",[e._v("They persist power cycles. It's an object that an owner of a hierarchy has asked\nto remain resident in the TPM through power cycles. The owner of the hierarchy\nwhere it belongs can evict it. TPM has limited amount of persistent memory.")]),e._v(" "),a("h1",{attrs:{id:"hierarchies"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hierarchies"}},[e._v("#")]),e._v(" Hierarchies")]),e._v(" "),a("p",[e._v("It's a collection of entities that are related and managed as a group. Those\nentities include permanent objects (the hierarchy handles), primary objects at\nthe root of a tree, and other objects such as keys in the tree. NV indexes\nbelong to a hierarchy but arenâ€™t in a tree. Entities, other than permanent\nentities, can be erased as a group.")]),e._v(" "),a("p",[e._v("The cryptographic root of each hierarchy is a seed: a large random number that\nthe TPM generates and never exposes outside its secure boundary. The TPM uses\nthe seed to create primary objects such as storage root keys. Those keys form\nthe parent at the top of a hierarchy and are used to encrypt its children.")]),e._v(" "),a("p",[e._v("A hierarchy can be persistent (retained through a reboot) or volatile (erased at\nreboot). Each hierarchy is targeted at specific use cases: for the platform\nmanufacturer, for the user, for privacy-sensitive applications, and for\nephemeral requirements.")]),e._v(" "),a("p",[e._v("TPM 1.2 has one hierarchy. TPM 2.0 has four.")]),e._v(" "),a("h2",{attrs:{id:"endorsement-hierarchy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#endorsement-hierarchy"}},[e._v("#")]),e._v(" Endorsement Hierarchy")]),e._v(" "),a("p",[e._v("It's reserved for objects created and certified by the TPM manufacturer. The\nendorsement seed ("),a("code",[e._v("eseed")]),e._v(") is randomly generated at manufacturing time and never\nchanges during the lifetime of the device. The primary endorsement key is\ncertified by the TPM manufacturer, and because its seed never changes, it can be\nused to identify the device. Since there's only one TPM device per machine, the\nprimary endorsement key can also be used as the machine's identity. It's\nprivacy-sensitive.")]),e._v(" "),a("h2",{attrs:{id:"platform-hierarchy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#platform-hierarchy"}},[e._v("#")]),e._v(" Platform Hierarchy")]),e._v(" "),a("p",[e._v("The platform hierarchy is reserved for objects created and certified by the OEM\nthat builds the host platform. The platform seed (pseed) is randomly generated\nat manufacturing time, but can be changed by the OEM by calling\n"),a("code",[e._v("TPM2_CC_ChangePPS")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"storage-hierarchy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#storage-hierarchy"}},[e._v("#")]),e._v(" Storage Hierarchy")]),e._v(" "),a("p",[e._v("It's used by the platform owner (IT department or the end user). It has owner\npolicy and an authorization value, both persist through reboots. They are rarely\nchanged. When a user takes ownership, for example, when the IT department\nprovisions a new host on the network, the owner hierarchy is reset. This is done\nby calling "),a("code",[e._v("TPM2_CC_Clear")]),e._v(". In this critical setup step, two user keys should be\nprovisioned and certified by the owner: these form the root of trust for all the\nkeys generated on the owner hierarchy.")]),e._v(" "),a("p",[e._v("It's intended fo non-privacy-sensitive operations.\nIt can be turned off.")]),e._v(" "),a("h2",{attrs:{id:"null-hierarchy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#null-hierarchy"}},[e._v("#")]),e._v(" Null Hierarchy")]),e._v(" "),a("p",[e._v("The null hierarchy is reserved for ephemeral keys. The null seed is re-generated\neach time the host reboots.")])])}),[],!1,null,null,null);t.default=s.exports}}]);